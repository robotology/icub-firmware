

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Dec 12 16:31:59 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16F1824
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     	;# 
    37  0001                     	;# 
    38  0002                     	;# 
    39  0003                     	;# 
    40  0004                     	;# 
    41  0005                     	;# 
    42  0006                     	;# 
    43  0007                     	;# 
    44  0008                     	;# 
    45  0009                     	;# 
    46  000A                     	;# 
    47  000B                     	;# 
    48  000C                     	;# 
    49  000E                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001E                     	;# 
    63  001F                     	;# 
    64  008C                     	;# 
    65  008E                     	;# 
    66  0091                     	;# 
    67  0092                     	;# 
    68  0093                     	;# 
    69  0095                     	;# 
    70  0096                     	;# 
    71  0097                     	;# 
    72  0098                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  010C                     	;# 
    81  010E                     	;# 
    82  0111                     	;# 
    83  0112                     	;# 
    84  0113                     	;# 
    85  0114                     	;# 
    86  0115                     	;# 
    87  0116                     	;# 
    88  0117                     	;# 
    89  0118                     	;# 
    90  0119                     	;# 
    91  011A                     	;# 
    92  011B                     	;# 
    93  011D                     	;# 
    94  011E                     	;# 
    95  018C                     	;# 
    96  018E                     	;# 
    97  0191                     	;# 
    98  0191                     	;# 
    99  0192                     	;# 
   100  0193                     	;# 
   101  0193                     	;# 
   102  0193                     	;# 
   103  0194                     	;# 
   104  0195                     	;# 
   105  0196                     	;# 
   106  0199                     	;# 
   107  019A                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019C                     	;# 
   111  019D                     	;# 
   112  019E                     	;# 
   113  019F                     	;# 
   114  020C                     	;# 
   115  020E                     	;# 
   116  0211                     	;# 
   117  0211                     	;# 
   118  0212                     	;# 
   119  0212                     	;# 
   120  0213                     	;# 
   121  0213                     	;# 
   122  0214                     	;# 
   123  0214                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0216                     	;# 
   130  0217                     	;# 
   131  0217                     	;# 
   132  0291                     	;# 
   133  0292                     	;# 
   134  0293                     	;# 
   135  0294                     	;# 
   136  0295                     	;# 
   137  0295                     	;# 
   138  0296                     	;# 
   139  0298                     	;# 
   140  0299                     	;# 
   141  029A                     	;# 
   142  029B                     	;# 
   143  029C                     	;# 
   144  029D                     	;# 
   145  029E                     	;# 
   146  029E                     	;# 
   147  0311                     	;# 
   148  0312                     	;# 
   149  0313                     	;# 
   150  0318                     	;# 
   151  0319                     	;# 
   152  031A                     	;# 
   153  038C                     	;# 
   154  038E                     	;# 
   155  0391                     	;# 
   156  0392                     	;# 
   157  0393                     	;# 
   158  039A                     	;# 
   159  039C                     	;# 
   160  039D                     	;# 
   161  039E                     	;# 
   162  039F                     	;# 
   163  0415                     	;# 
   164  0416                     	;# 
   165  0417                     	;# 
   166  041C                     	;# 
   167  041D                     	;# 
   168  041E                     	;# 
   169  0FE4                     	;# 
   170  0FE5                     	;# 
   171  0FE6                     	;# 
   172  0FE7                     	;# 
   173  0FE8                     	;# 
   174  0FE9                     	;# 
   175  0FEA                     	;# 
   176  0FEB                     	;# 
   177  0FED                     	;# 
   178  0FEE                     	;# 
   179  0FEF                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  0008                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000E                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  008C                     	;# 
   209  008E                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  010C                     	;# 
   225  010E                     	;# 
   226  0111                     	;# 
   227  0112                     	;# 
   228  0113                     	;# 
   229  0114                     	;# 
   230  0115                     	;# 
   231  0116                     	;# 
   232  0117                     	;# 
   233  0118                     	;# 
   234  0119                     	;# 
   235  011A                     	;# 
   236  011B                     	;# 
   237  011D                     	;# 
   238  011E                     	;# 
   239  018C                     	;# 
   240  018E                     	;# 
   241  0191                     	;# 
   242  0191                     	;# 
   243  0192                     	;# 
   244  0193                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0194                     	;# 
   248  0195                     	;# 
   249  0196                     	;# 
   250  0199                     	;# 
   251  019A                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019C                     	;# 
   255  019D                     	;# 
   256  019E                     	;# 
   257  019F                     	;# 
   258  020C                     	;# 
   259  020E                     	;# 
   260  0211                     	;# 
   261  0211                     	;# 
   262  0212                     	;# 
   263  0212                     	;# 
   264  0213                     	;# 
   265  0213                     	;# 
   266  0214                     	;# 
   267  0214                     	;# 
   268  0215                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0216                     	;# 
   273  0216                     	;# 
   274  0217                     	;# 
   275  0217                     	;# 
   276  0291                     	;# 
   277  0292                     	;# 
   278  0293                     	;# 
   279  0294                     	;# 
   280  0295                     	;# 
   281  0295                     	;# 
   282  0296                     	;# 
   283  0298                     	;# 
   284  0299                     	;# 
   285  029A                     	;# 
   286  029B                     	;# 
   287  029C                     	;# 
   288  029D                     	;# 
   289  029E                     	;# 
   290  029E                     	;# 
   291  0311                     	;# 
   292  0312                     	;# 
   293  0313                     	;# 
   294  0318                     	;# 
   295  0319                     	;# 
   296  031A                     	;# 
   297  038C                     	;# 
   298  038E                     	;# 
   299  0391                     	;# 
   300  0392                     	;# 
   301  0393                     	;# 
   302  039A                     	;# 
   303  039C                     	;# 
   304  039D                     	;# 
   305  039E                     	;# 
   306  039F                     	;# 
   307  0415                     	;# 
   308  0416                     	;# 
   309  0417                     	;# 
   310  041C                     	;# 
   311  041D                     	;# 
   312  041E                     	;# 
   313  0FE4                     	;# 
   314  0FE5                     	;# 
   315  0FE6                     	;# 
   316  0FE7                     	;# 
   317  0FE8                     	;# 
   318  0FE9                     	;# 
   319  0FEA                     	;# 
   320  0FEB                     	;# 
   321  0FED                     	;# 
   322  0FEE                     	;# 
   323  0FEF                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000E                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0015                     	;# 
   342  0016                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001C                     	;# 
   350  001E                     	;# 
   351  001F                     	;# 
   352  008C                     	;# 
   353  008E                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  010C                     	;# 
   369  010E                     	;# 
   370  0111                     	;# 
   371  0112                     	;# 
   372  0113                     	;# 
   373  0114                     	;# 
   374  0115                     	;# 
   375  0116                     	;# 
   376  0117                     	;# 
   377  0118                     	;# 
   378  0119                     	;# 
   379  011A                     	;# 
   380  011B                     	;# 
   381  011D                     	;# 
   382  011E                     	;# 
   383  018C                     	;# 
   384  018E                     	;# 
   385  0191                     	;# 
   386  0191                     	;# 
   387  0192                     	;# 
   388  0193                     	;# 
   389  0193                     	;# 
   390  0193                     	;# 
   391  0194                     	;# 
   392  0195                     	;# 
   393  0196                     	;# 
   394  0199                     	;# 
   395  019A                     	;# 
   396  019B                     	;# 
   397  019B                     	;# 
   398  019C                     	;# 
   399  019D                     	;# 
   400  019E                     	;# 
   401  019F                     	;# 
   402  020C                     	;# 
   403  020E                     	;# 
   404  0211                     	;# 
   405  0211                     	;# 
   406  0212                     	;# 
   407  0212                     	;# 
   408  0213                     	;# 
   409  0213                     	;# 
   410  0214                     	;# 
   411  0214                     	;# 
   412  0215                     	;# 
   413  0215                     	;# 
   414  0215                     	;# 
   415  0215                     	;# 
   416  0216                     	;# 
   417  0216                     	;# 
   418  0217                     	;# 
   419  0217                     	;# 
   420  0291                     	;# 
   421  0292                     	;# 
   422  0293                     	;# 
   423  0294                     	;# 
   424  0295                     	;# 
   425  0295                     	;# 
   426  0296                     	;# 
   427  0298                     	;# 
   428  0299                     	;# 
   429  029A                     	;# 
   430  029B                     	;# 
   431  029C                     	;# 
   432  029D                     	;# 
   433  029E                     	;# 
   434  029E                     	;# 
   435  0311                     	;# 
   436  0312                     	;# 
   437  0313                     	;# 
   438  0318                     	;# 
   439  0319                     	;# 
   440  031A                     	;# 
   441  038C                     	;# 
   442  038E                     	;# 
   443  0391                     	;# 
   444  0392                     	;# 
   445  0393                     	;# 
   446  039A                     	;# 
   447  039C                     	;# 
   448  039D                     	;# 
   449  039E                     	;# 
   450  039F                     	;# 
   451  0415                     	;# 
   452  0416                     	;# 
   453  0417                     	;# 
   454  041C                     	;# 
   455  041D                     	;# 
   456  041E                     	;# 
   457  0FE4                     	;# 
   458  0FE5                     	;# 
   459  0FE6                     	;# 
   460  0FE7                     	;# 
   461  0FE8                     	;# 
   462  0FE9                     	;# 
   463  0FEA                     	;# 
   464  0FEB                     	;# 
   465  0FED                     	;# 
   466  0FEE                     	;# 
   467  0FEF                     	;# 
   468  0000                     	;# 
   469  0001                     	;# 
   470  0002                     	;# 
   471  0003                     	;# 
   472  0004                     	;# 
   473  0005                     	;# 
   474  0006                     	;# 
   475  0007                     	;# 
   476  0008                     	;# 
   477  0009                     	;# 
   478  000A                     	;# 
   479  000B                     	;# 
   480  000C                     	;# 
   481  000E                     	;# 
   482  0011                     	;# 
   483  0012                     	;# 
   484  0013                     	;# 
   485  0015                     	;# 
   486  0016                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  001E                     	;# 
   495  001F                     	;# 
   496  008C                     	;# 
   497  008E                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0093                     	;# 
   501  0095                     	;# 
   502  0096                     	;# 
   503  0097                     	;# 
   504  0098                     	;# 
   505  0099                     	;# 
   506  009A                     	;# 
   507  009B                     	;# 
   508  009B                     	;# 
   509  009C                     	;# 
   510  009D                     	;# 
   511  009E                     	;# 
   512  010C                     	;# 
   513  010E                     	;# 
   514  0111                     	;# 
   515  0112                     	;# 
   516  0113                     	;# 
   517  0114                     	;# 
   518  0115                     	;# 
   519  0116                     	;# 
   520  0117                     	;# 
   521  0118                     	;# 
   522  0119                     	;# 
   523  011A                     	;# 
   524  011B                     	;# 
   525  011D                     	;# 
   526  011E                     	;# 
   527  018C                     	;# 
   528  018E                     	;# 
   529  0191                     	;# 
   530  0191                     	;# 
   531  0192                     	;# 
   532  0193                     	;# 
   533  0193                     	;# 
   534  0193                     	;# 
   535  0194                     	;# 
   536  0195                     	;# 
   537  0196                     	;# 
   538  0199                     	;# 
   539  019A                     	;# 
   540  019B                     	;# 
   541  019B                     	;# 
   542  019C                     	;# 
   543  019D                     	;# 
   544  019E                     	;# 
   545  019F                     	;# 
   546  020C                     	;# 
   547  020E                     	;# 
   548  0211                     	;# 
   549  0211                     	;# 
   550  0212                     	;# 
   551  0212                     	;# 
   552  0213                     	;# 
   553  0213                     	;# 
   554  0214                     	;# 
   555  0214                     	;# 
   556  0215                     	;# 
   557  0215                     	;# 
   558  0215                     	;# 
   559  0215                     	;# 
   560  0216                     	;# 
   561  0216                     	;# 
   562  0217                     	;# 
   563  0217                     	;# 
   564  0291                     	;# 
   565  0292                     	;# 
   566  0293                     	;# 
   567  0294                     	;# 
   568  0295                     	;# 
   569  0295                     	;# 
   570  0296                     	;# 
   571  0298                     	;# 
   572  0299                     	;# 
   573  029A                     	;# 
   574  029B                     	;# 
   575  029C                     	;# 
   576  029D                     	;# 
   577  029E                     	;# 
   578  029E                     	;# 
   579  0311                     	;# 
   580  0312                     	;# 
   581  0313                     	;# 
   582  0318                     	;# 
   583  0319                     	;# 
   584  031A                     	;# 
   585  038C                     	;# 
   586  038E                     	;# 
   587  0391                     	;# 
   588  0392                     	;# 
   589  0393                     	;# 
   590  039A                     	;# 
   591  039C                     	;# 
   592  039D                     	;# 
   593  039E                     	;# 
   594  039F                     	;# 
   595  0415                     	;# 
   596  0416                     	;# 
   597  0417                     	;# 
   598  041C                     	;# 
   599  041D                     	;# 
   600  041E                     	;# 
   601  0FE4                     	;# 
   602  0FE5                     	;# 
   603  0FE6                     	;# 
   604  0FE7                     	;# 
   605  0FE8                     	;# 
   606  0FE9                     	;# 
   607  0FEA                     	;# 
   608  0FEB                     	;# 
   609  0FED                     	;# 
   610  0FEE                     	;# 
   611  0FEF                     	;# 
   612  0000                     	;# 
   613  0001                     	;# 
   614  0002                     	;# 
   615  0003                     	;# 
   616  0004                     	;# 
   617  0005                     	;# 
   618  0006                     	;# 
   619  0007                     	;# 
   620  0008                     	;# 
   621  0009                     	;# 
   622  000A                     	;# 
   623  000B                     	;# 
   624  000C                     	;# 
   625  000E                     	;# 
   626  0011                     	;# 
   627  0012                     	;# 
   628  0013                     	;# 
   629  0015                     	;# 
   630  0016                     	;# 
   631  0016                     	;# 
   632  0017                     	;# 
   633  0018                     	;# 
   634  0019                     	;# 
   635  001A                     	;# 
   636  001B                     	;# 
   637  001C                     	;# 
   638  001E                     	;# 
   639  001F                     	;# 
   640  008C                     	;# 
   641  008E                     	;# 
   642  0091                     	;# 
   643  0092                     	;# 
   644  0093                     	;# 
   645  0095                     	;# 
   646  0096                     	;# 
   647  0097                     	;# 
   648  0098                     	;# 
   649  0099                     	;# 
   650  009A                     	;# 
   651  009B                     	;# 
   652  009B                     	;# 
   653  009C                     	;# 
   654  009D                     	;# 
   655  009E                     	;# 
   656  010C                     	;# 
   657  010E                     	;# 
   658  0111                     	;# 
   659  0112                     	;# 
   660  0113                     	;# 
   661  0114                     	;# 
   662  0115                     	;# 
   663  0116                     	;# 
   664  0117                     	;# 
   665  0118                     	;# 
   666  0119                     	;# 
   667  011A                     	;# 
   668  011B                     	;# 
   669  011D                     	;# 
   670  011E                     	;# 
   671  018C                     	;# 
   672  018E                     	;# 
   673  0191                     	;# 
   674  0191                     	;# 
   675  0192                     	;# 
   676  0193                     	;# 
   677  0193                     	;# 
   678  0193                     	;# 
   679  0194                     	;# 
   680  0195                     	;# 
   681  0196                     	;# 
   682  0199                     	;# 
   683  019A                     	;# 
   684  019B                     	;# 
   685  019B                     	;# 
   686  019C                     	;# 
   687  019D                     	;# 
   688  019E                     	;# 
   689  019F                     	;# 
   690  020C                     	;# 
   691  020E                     	;# 
   692  0211                     	;# 
   693  0211                     	;# 
   694  0212                     	;# 
   695  0212                     	;# 
   696  0213                     	;# 
   697  0213                     	;# 
   698  0214                     	;# 
   699  0214                     	;# 
   700  0215                     	;# 
   701  0215                     	;# 
   702  0215                     	;# 
   703  0215                     	;# 
   704  0216                     	;# 
   705  0216                     	;# 
   706  0217                     	;# 
   707  0217                     	;# 
   708  0291                     	;# 
   709  0292                     	;# 
   710  0293                     	;# 
   711  0294                     	;# 
   712  0295                     	;# 
   713  0295                     	;# 
   714  0296                     	;# 
   715  0298                     	;# 
   716  0299                     	;# 
   717  029A                     	;# 
   718  029B                     	;# 
   719  029C                     	;# 
   720  029D                     	;# 
   721  029E                     	;# 
   722  029E                     	;# 
   723  0311                     	;# 
   724  0312                     	;# 
   725  0313                     	;# 
   726  0318                     	;# 
   727  0319                     	;# 
   728  031A                     	;# 
   729  038C                     	;# 
   730  038E                     	;# 
   731  0391                     	;# 
   732  0392                     	;# 
   733  0393                     	;# 
   734  039A                     	;# 
   735  039C                     	;# 
   736  039D                     	;# 
   737  039E                     	;# 
   738  039F                     	;# 
   739  0415                     	;# 
   740  0416                     	;# 
   741  0417                     	;# 
   742  041C                     	;# 
   743  041D                     	;# 
   744  041E                     	;# 
   745  0FE4                     	;# 
   746  0FE5                     	;# 
   747  0FE6                     	;# 
   748  0FE7                     	;# 
   749  0FE8                     	;# 
   750  0FE9                     	;# 
   751  0FEA                     	;# 
   752  0FEB                     	;# 
   753  0FED                     	;# 
   754  0FEE                     	;# 
   755  0FEF                     	;# 
   756                           
   757                           	psect	idataCOMMON
   758  078B                     __pidataCOMMON:	
   759                           
   760                           ;initializer for _first
   761  078B  3401               	retlw	1
   762                           
   763                           ;initializer for _timer_debounce
   764  078C  3403               	retlw	3
   765                           
   766                           	psect	idataBANK0
   767  0784                     __pidataBANK0:	
   768                           
   769                           ;initializer for _vtol
   770  0784  3464               	retlw	100
   771  0785  3400               	retlw	0
   772                           
   773                           ;initializer for _adc_channel
   774  0786  3407               	retlw	7
   775                           
   776                           ;initializer for _blink_ds
   777  0787  3464               	retlw	100
   778                           
   779                           	psect	idataBANK1
   780  0758                     __pidataBANK1:	
   781                           
   782                           ;initializer for _VTH
   783  0758  3400               	retlw	0
   784  0759  347D               	retlw	125
   785  075A  34D0               	retlw	208
   786  075B  3484               	retlw	132
   787  075C  34A0               	retlw	160
   788  075D  348C               	retlw	140
   789  075E  3470               	retlw	112
   790  075F  3494               	retlw	148
   791  0760  3440               	retlw	64
   792  0761  349C               	retlw	156
   793  0762  3410               	retlw	16
   794  0763  34A4               	retlw	164
   795  0764  34E0               	retlw	224
   796  0765  34AB               	retlw	171
   797                           
   798                           ;initializer for _Firmware_vers
   799  0766  3401               	retlw	1
   800                           
   801                           ;initializer for _Revision_vers
   802  0767  3401               	retlw	1
   803  000B                     _INTCONbits	set	11
   804  0011                     _PIR1bits	set	17
   805  0012                     _PIR2bits	set	18
   806  000C                     _PORTA	set	12
   807  000E                     _PORTC	set	14
   808  0018                     _T1CON	set	24
   809  0017                     _TMR1H	set	23
   810  0016                     _TMR1L	set	22
   811  0060                     _RA0	set	96
   812  0062                     _RA2	set	98
   813  0064                     _RA4	set	100
   814  0070                     _RC0	set	112
   815  0071                     _RC1	set	113
   816  0074                     _RC4	set	116
   817  0075                     _RC5	set	117
   818  009D                     _ADCON0	set	157
   819  009D                     _ADCON0bits	set	157
   820  009E                     _ADCON1	set	158
   821  009E                     _ADCON1bits	set	158
   822  009C                     _ADRESH	set	156
   823  009B                     _ADRESL	set	155
   824  0099                     _OSCCON	set	153
   825  0091                     _PIE1bits	set	145
   826  0092                     _PIE2bits	set	146
   827  008C                     _TRISA	set	140
   828  008E                     _TRISC	set	142
   829  010C                     _LATA	set	268
   830  010E                     _LATC	set	270
   831  018C                     _ANSELA	set	396
   832  018E                     _ANSELC	set	398
   833  0212                     _SSP1ADD	set	530
   834  0211                     _SSP1BUF	set	529
   835  0215                     _SSP1CON1	set	533
   836  0215                     _SSP1CON1bits	set	533
   837  0216                     _SSP1CON2	set	534
   838  0216                     _SSP1CON2bits	set	534
   839  0217                     _SSP1CON3bits	set	535
   840  0214                     _SSP1STATbits	set	532
   841  0211                     _SSPBUF	set	529
   842                           
   843                           ; #config settings
   844  0000                     
   845                           	psect	cinit
   846  0685                     start_initialization:	
   847  0685                     __initialization:	
   848                           
   849                           ; Clear objects allocated to BITCOMMON
   850  0685  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   851                           
   852                           ; Clear objects allocated to COMMON
   853  0686  01F8               	clrf	__pbssCOMMON& (0+127)
   854  0687  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   855  0688  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   856                           
   857                           ; Clear objects allocated to BANK0
   858  0689  305F               	movlw	low __pbssBANK0
   859  068A  0084               	movwf	4
   860  068B  3000               	movlw	high __pbssBANK0
   861  068C  0085               	movwf	5
   862  068D  300D               	movlw	13
   863  068E  3187  2778  3186   	fcall	clear_ram0
   864                           
   865                           ; Clear objects allocated to BANK1
   866  0691  30A0               	movlw	low __pbssBANK1
   867  0692  0084               	movwf	4
   868  0693  3000               	movlw	high __pbssBANK1
   869  0694  0085               	movwf	5
   870  0695  301C               	movlw	28
   871  0696  3187  2778  3186   	fcall	clear_ram0
   872                           
   873                           ; Initialize objects allocated to COMMON
   874  0699  3187  278B  3186   	fcall	__pidataCOMMON	;fetch initializer
   875  069C  00FB               	movwf	__pdataCOMMON& (0+127)
   876  069D  3187  278C  3186   	fcall	__pidataCOMMON+1	;fetch initializer
   877  06A0  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   878                           
   879                           ; Initialize objects allocated to BANK0
   880  06A1  3084               	movlw	low __pidataBANK0
   881  06A2  0084               	movwf	4
   882  06A3  3087               	movlw	(high __pidataBANK0)| (0+128)
   883  06A4  0085               	movwf	5
   884  06A5  306C               	movlw	low __pdataBANK0
   885  06A6  0086               	movwf	6
   886  06A7  3000               	movlw	high __pdataBANK0
   887  06A8  0087               	movwf	7
   888  06A9  3004               	movlw	4
   889  06AA  3187  277E  3186   	fcall	init_ram
   890                           
   891                           ; Initialize objects allocated to BANK1
   892  06AD  3058               	movlw	low __pidataBANK1
   893  06AE  0084               	movwf	4
   894  06AF  3087               	movlw	(high __pidataBANK1)| (0+128)
   895  06B0  0085               	movwf	5
   896  06B1  30BC               	movlw	low __pdataBANK1
   897  06B2  0086               	movwf	6
   898  06B3  3000               	movlw	high __pdataBANK1
   899  06B4  0087               	movwf	7
   900  06B5  3010               	movlw	16
   901  06B6  3187  277E         	fcall	init_ram
   902  06B8                     end_of_initialization:	
   903                           ;End of C runtime variable initialization code
   904                           
   905  06B8                     __end_of__initialization:	
   906  06B8  0020               	movlb	0
   907  06B9  3186  2E32         	ljmp	_main	;jump to C main() function
   908                           
   909                           	psect	bitbssCOMMON
   910  03E8                     __pbitbssCOMMON:	
   911  03E8                     _button_ok:	
   912  03E8                     	ds	1
   913                           
   914                           	psect	bssCOMMON
   915  0078                     __pbssCOMMON:	
   916  0078                     _index_i2c:	
   917  0078                     	ds	2
   918  007A                     _timer_fail:	
   919  007A                     	ds	1
   920                           
   921                           	psect	dataCOMMON
   922  007B                     __pdataCOMMON:	
   923  007B                     _first:	
   924  007B                     	ds	1
   925  007C                     _timer_debounce:	
   926  007C                     	ds	1
   927                           
   928                           	psect	bssBANK0
   929  005F                     __pbssBANK0:	
   930  005F                     _vhyst:	
   931  005F                     	ds	2
   932  0061                     _junk:	
   933  0061                     	ds	1
   934  0062                     _timeout:	
   935  0062                     	ds	1
   936  0063                     _timer_100ms:	
   937  0063                     	ds	1
   938  0064                     _timer_100us:	
   939  0064                     	ds	1
   940  0065                     _timer_10ms:	
   941  0065                     	ds	1
   942  0066                     _timer_1ms:	
   943  0066                     	ds	1
   944  0067                     _timer_1s:	
   945  0067                     	ds	1
   946  0068                     _timer_blink:	
   947  0068                     	ds	1
   948  0069                     _toggle:	
   949  0069                     	ds	1
   950  006A                     _vbatt:	
   951  006A                     	ds	2
   952                           
   953                           	psect	dataBANK0
   954  006C                     __pdataBANK0:	
   955  006C                     _vtol:	
   956  006C                     	ds	2
   957  006E                     _adc_channel:	
   958  006E                     	ds	1
   959  006F                     _blink_ds:	
   960  006F                     	ds	1
   961                           
   962                           	psect	bssBANK1
   963  00A0                     __pbssBANK1:	
   964  00A0                     _I2C_Array:	
   965  00A0                     	ds	6
   966  00A6                     _ibatt_hres:	
   967  00A6                     	ds	3
   968  00A9                     _vbatt_hres:	
   969  00A9                     	ds	3
   970  00AC                     _vscale:	
   971  00AC                     	ds	3
   972  00AF                     _adc_buffer:	
   973  00AF                     	ds	2
   974  00B1                     _charge:	
   975  00B1                     	ds	2
   976  00B3                     _ibatt:	
   977  00B3                     	ds	2
   978  00B5                     _Build_number:	
   979  00B5                     	ds	1
   980  00B6                     _cont:	
   981  00B6                     	ds	1
   982  00B7                     _j:	
   983  00B7                     	ds	1
   984  00B8                     _prova:	
   985  00B8                     	ds	1
   986  00B9                     _iscale:	
   987  00B9                     	ds	3
   988                           
   989                           	psect	dataBANK1
   990  00BC                     __pdataBANK1:	
   991  00BC                     _VTH:	
   992  00BC                     	ds	14
   993  00CA                     _Firmware_vers:	
   994  00CA                     	ds	1
   995  00CB                     _Revision_vers:	
   996  00CB                     	ds	1
   997                           
   998                           	psect	clrtext
   999  0778                     clear_ram0:	
  1000                           ;	Called with FSR0 containing the base address, and
  1001                           ;	WREG with the size to clear
  1002                           
  1003  0778  0064               	clrwdt	;clear the watchdog before getting into this loop
  1004  0779                     clrloop0:	
  1005  0779  0180               	clrf	0	;clear RAM location pointed to by FSR
  1006  077A  3101               	addfsr 0,1
  1007  077B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1008  077C  2F79               	goto	clrloop0	;have we reached the end yet?
  1009  077D  3400               	retlw	0	;all done for this memory range, return
  1010                           
  1011                           	psect	inittext
  1012  077E                     init_ram:	
  1013  077E  00FE               	movwf	126
  1014  077F                     initloop:	
  1015  077F  0012               	moviw fsr0++
  1016  0780  001E               	movwi fsr1++
  1017  0781  0BFE               	decfsz	126,f
  1018  0782  2F7F               	goto	initloop
  1019  0783  3400               	retlw	0
  1020                           
  1021                           	psect	cstackCOMMON
  1022  0070                     __pcstackCOMMON:	
  1023  0070                     ?_ConfigureOscillator:	
  1024  0070                     ?_InitApp:	
  1025                           ; 0 bytes @ 0x0
  1026                           
  1027  0070                     ?_I2cInitSlave:	
  1028                           ; 0 bytes @ 0x0
  1029                           
  1030  0070                     ?_blink:	
  1031                           ; 0 bytes @ 0x0
  1032                           
  1033  0070                     ?_measureBattery:	
  1034                           ; 0 bytes @ 0x0
  1035                           
  1036  0070                     ?_displayCharge:	
  1037                           ; 0 bytes @ 0x0
  1038                           
  1039  0070                     ?_readButton:	
  1040                           ; 0 bytes @ 0x0
  1041                           
  1042  0070                     ?_lightupLed:	
  1043                           ; 0 bytes @ 0x0
  1044                           
  1045  0070                     ?_isr:	
  1046                           ; 0 bytes @ 0x0
  1047                           
  1048  0070                     ??_isr:	
  1049                           ; 0 bytes @ 0x0
  1050                           
  1051  0070                     ?_main:	
  1052                           ; 0 bytes @ 0x0
  1053                           
  1054  0070                     ?_read_adc:	
  1055                           ; 0 bytes @ 0x0
  1056                           
  1057                           
  1058                           ; 2 bytes @ 0x0
  1059  0070                     	ds	8
  1060                           
  1061                           	psect	cstackBANK0
  1062  0020                     __pcstackBANK0:	
  1063  0020                     ??_ConfigureOscillator:	
  1064  0020                     ??_InitApp:	
  1065                           ; 0 bytes @ 0x0
  1066                           
  1067  0020                     ??_I2cInitSlave:	
  1068                           ; 0 bytes @ 0x0
  1069                           
  1070  0020                     ??_blink:	
  1071                           ; 0 bytes @ 0x0
  1072                           
  1073  0020                     ??_readButton:	
  1074                           ; 0 bytes @ 0x0
  1075                           
  1076  0020                     ??_lightupLed:	
  1077                           ; 0 bytes @ 0x0
  1078                           
  1079  0020                     ??_read_adc:	
  1080                           ; 0 bytes @ 0x0
  1081                           
  1082  0020                     ?___ftpack:	
  1083                           ; 0 bytes @ 0x0
  1084                           
  1085  0020                     read_adc@channel:	
  1086                           ; 3 bytes @ 0x0
  1087                           
  1088  0020                     I2cInitSlave@address:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0020                     ___ftpack@arg:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094                           
  1095                           ; 3 bytes @ 0x0
  1096  0020                     	ds	2
  1097  0022                     _lightupLed$291:	
  1098                           
  1099                           ; 1 bytes @ 0x2
  1100  0022                     	ds	1
  1101  0023                     _lightupLed$292:	
  1102  0023                     ___ftpack@exp:	
  1103                           ; 1 bytes @ 0x3
  1104                           
  1105                           
  1106                           ; 1 bytes @ 0x3
  1107  0023                     	ds	1
  1108  0024                     _lightupLed$293:	
  1109  0024                     ___ftpack@sign:	
  1110                           ; 1 bytes @ 0x4
  1111                           
  1112                           
  1113                           ; 1 bytes @ 0x4
  1114  0024                     	ds	1
  1115  0025                     ??___ftpack:	
  1116  0025                     _lightupLed$294:	
  1117                           ; 0 bytes @ 0x5
  1118                           
  1119                           
  1120                           ; 1 bytes @ 0x5
  1121  0025                     	ds	1
  1122  0026                     lightupLed@blink:	
  1123                           
  1124                           ; 1 bytes @ 0x6
  1125  0026                     	ds	1
  1126  0027                     lightupLed@lightup:	
  1127                           
  1128                           ; 1 bytes @ 0x7
  1129  0027                     	ds	1
  1130  0028                     ??_displayCharge:	
  1131  0028                     ?___lwtoft:	
  1132                           ; 0 bytes @ 0x8
  1133                           
  1134  0028                     ___lwtoft@c:	
  1135                           ; 3 bytes @ 0x8
  1136                           
  1137                           
  1138                           ; 2 bytes @ 0x8
  1139  0028                     	ds	3
  1140  002B                     ??___lwtoft:	
  1141                           
  1142                           ; 0 bytes @ 0xB
  1143  002B                     	ds	1
  1144  002C                     ?___ftdiv:	
  1145  002C                     displayCharge@adc_buffer_last:	
  1146                           ; 3 bytes @ 0xC
  1147                           
  1148  002C                     ___ftdiv@f2:	
  1149                           ; 2 bytes @ 0xC
  1150                           
  1151                           
  1152                           ; 3 bytes @ 0xC
  1153  002C                     	ds	3
  1154  002F                     ___ftdiv@f1:	
  1155                           
  1156                           ; 3 bytes @ 0xF
  1157  002F                     	ds	3
  1158  0032                     ??___ftdiv:	
  1159                           
  1160                           ; 0 bytes @ 0x12
  1161  0032                     	ds	4
  1162  0036                     ___ftdiv@cntr:	
  1163                           
  1164                           ; 1 bytes @ 0x16
  1165  0036                     	ds	1
  1166  0037                     ___ftdiv@f3:	
  1167                           
  1168                           ; 3 bytes @ 0x17
  1169  0037                     	ds	3
  1170  003A                     ___ftdiv@exp:	
  1171                           
  1172                           ; 1 bytes @ 0x1A
  1173  003A                     	ds	1
  1174  003B                     ___ftdiv@sign:	
  1175                           
  1176                           ; 1 bytes @ 0x1B
  1177  003B                     	ds	1
  1178  003C                     ?___ftmul:	
  1179  003C                     ___ftmul@f1:	
  1180                           ; 3 bytes @ 0x1C
  1181                           
  1182                           
  1183                           ; 3 bytes @ 0x1C
  1184  003C                     	ds	3
  1185  003F                     ___ftmul@f2:	
  1186                           
  1187                           ; 3 bytes @ 0x1F
  1188  003F                     	ds	3
  1189  0042                     ??___ftmul:	
  1190                           
  1191                           ; 0 bytes @ 0x22
  1192  0042                     	ds	4
  1193  0046                     ___ftmul@exp:	
  1194                           
  1195                           ; 1 bytes @ 0x26
  1196  0046                     	ds	1
  1197  0047                     ___ftmul@f3_as_product:	
  1198                           
  1199                           ; 3 bytes @ 0x27
  1200  0047                     	ds	3
  1201  004A                     ___ftmul@cntr:	
  1202                           
  1203                           ; 1 bytes @ 0x2A
  1204  004A                     	ds	1
  1205  004B                     ___ftmul@sign:	
  1206                           
  1207                           ; 1 bytes @ 0x2B
  1208  004B                     	ds	1
  1209  004C                     ?___fttol:	
  1210  004C                     ___fttol@f1:	
  1211                           ; 4 bytes @ 0x2C
  1212                           
  1213                           
  1214                           ; 3 bytes @ 0x2C
  1215  004C                     	ds	4
  1216  0050                     ??___fttol:	
  1217                           
  1218                           ; 0 bytes @ 0x30
  1219  0050                     	ds	4
  1220  0054                     ___fttol@sign1:	
  1221                           
  1222                           ; 1 bytes @ 0x34
  1223  0054                     	ds	1
  1224  0055                     ___fttol@lval:	
  1225                           
  1226                           ; 4 bytes @ 0x35
  1227  0055                     	ds	4
  1228  0059                     ___fttol@exp1:	
  1229                           
  1230                           ; 1 bytes @ 0x39
  1231  0059                     	ds	1
  1232  005A                     ??_measureBattery:	
  1233                           
  1234                           ; 0 bytes @ 0x3A
  1235  005A                     	ds	4
  1236  005E                     ??_main:	
  1237                           
  1238                           ; 0 bytes @ 0x3E
  1239  005E                     	ds	1
  1240                           
  1241                           	psect	maintext
  1242  0632                     __pmaintext:	
  1243 ;;
  1244 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1245 ;;
  1246 ;; *************** function _main *****************
  1247 ;; Defined at:
  1248 ;;		line 113 in file "main.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;		None               void
  1255 ;; Registers used:
  1256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 17F/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1262 ;;      Params:         0       0       0       0
  1263 ;;      Locals:         0       0       0       0
  1264 ;;      Temps:          0       1       0       0
  1265 ;;      Totals:         0       1       0       0
  1266 ;;Total ram usage:        1 bytes
  1267 ;; Hardware stack levels required when called:    4
  1268 ;; This function calls:
  1269 ;;		_ConfigureOscillator
  1270 ;;		_InitApp
  1271 ;;		_I2cInitSlave
  1272 ;;		_blink
  1273 ;;		_measureBattery
  1274 ;;		_displayCharge
  1275 ;;		_readButton
  1276 ;; This function is called by:
  1277 ;;		Startup code after reset
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function _main
  1283  0632                     _main:	
  1284                           
  1285                           ;main.c: 115: ConfigureOscillator();
  1286                           
  1287                           ;incstack = 0
  1288                           ; Regs used in _main: [allreg]
  1289  0632  3187  2788  3186   	fcall	_ConfigureOscillator
  1290                           
  1291                           ;main.c: 118: InitApp();
  1292  0635  3186  26ED  3186   	fcall	_InitApp
  1293                           
  1294                           ;main.c: 120: I2cInitSlave(0x5A);
  1295  0638  305A               	movlw	90
  1296  0639  3187  2710  3186   	fcall	_I2cInitSlave
  1297  063C                     l1724:	
  1298                           ;main.c: 122: while(1)
  1299                           
  1300                           
  1301                           ;main.c: 123: {
  1302                           ;main.c: 124: if (timer_100us >= 1){
  1303  063C  0020               	movlb	0	; select bank0
  1304  063D  0864               	movf	_timer_100us,w
  1305  063E  1903               	btfsc	3,2
  1306  063F  2E45               	goto	l1730
  1307                           
  1308                           ;main.c: 125: timer_100us=0;
  1309  0640  01E4               	clrf	_timer_100us
  1310                           
  1311                           ;main.c: 126: timer_1ms++;
  1312  0641  3001               	movlw	1
  1313  0642  00DE               	movwf	??_main
  1314  0643  085E               	movf	??_main,w
  1315  0644  07E6               	addwf	_timer_1ms,f
  1316  0645                     l1730:	
  1317                           
  1318                           ;main.c: 127: }
  1319                           ;main.c: 129: if (timer_1ms >= 10){
  1320  0645  300A               	movlw	10
  1321  0646  0266               	subwf	_timer_1ms,w
  1322  0647  1C03               	skipc
  1323  0648  2E4E               	goto	l1736
  1324                           
  1325                           ;main.c: 130: timer_1ms=0;
  1326  0649  01E6               	clrf	_timer_1ms
  1327                           
  1328                           ;main.c: 131: timer_10ms++;
  1329  064A  3001               	movlw	1
  1330  064B  00DE               	movwf	??_main
  1331  064C  085E               	movf	??_main,w
  1332  064D  07E5               	addwf	_timer_10ms,f
  1333  064E                     l1736:	
  1334                           
  1335                           ;main.c: 132: }
  1336                           ;main.c: 134: if (timer_10ms >= 10){
  1337  064E  300A               	movlw	10
  1338  064F  0265               	subwf	_timer_10ms,w
  1339  0650  1C03               	skipc
  1340  0651  2E60               	goto	l1748
  1341                           
  1342                           ;main.c: 135: timer_10ms=0;
  1343  0652  01E5               	clrf	_timer_10ms
  1344                           
  1345                           ;main.c: 136: timer_100ms++;
  1346  0653  3001               	movlw	1
  1347  0654  00DE               	movwf	??_main
  1348  0655  085E               	movf	??_main,w
  1349  0656  07E3               	addwf	_timer_100ms,f
  1350                           
  1351                           ;main.c: 138: blink();
  1352  0657  3187  2768  3186   	fcall	_blink
  1353                           
  1354                           ;main.c: 139: measureBattery();
  1355  065A  3182  2247  3186   	fcall	_measureBattery
  1356                           
  1357                           ;main.c: 140: displayCharge();
  1358  065D  3180  2098  3186   	fcall	_displayCharge
  1359  0660                     l1748:	
  1360                           
  1361                           ;main.c: 141: }
  1362                           ;main.c: 143: if (timer_100ms >= 10){
  1363  0660  300A               	movlw	10
  1364  0661  0020               	movlb	0	; select bank0
  1365  0662  0263               	subwf	_timer_100ms,w
  1366  0663  1C03               	skipc
  1367  0664  2E79               	goto	l1764
  1368                           
  1369                           ;main.c: 144: timer_100ms=0;
  1370  0665  01E3               	clrf	_timer_100ms
  1371                           
  1372                           ;main.c: 145: timer_1s++;
  1373  0666  3001               	movlw	1
  1374  0667  00DE               	movwf	??_main
  1375  0668  085E               	movf	??_main,w
  1376  0669  07E7               	addwf	_timer_1s,f
  1377                           
  1378                           ;main.c: 147: readButton();
  1379  066A  3186  26BB  3186   	fcall	_readButton
  1380                           
  1381                           ;main.c: 149: if(timeout++ > 10){
  1382  066D  3001               	movlw	1
  1383  066E  0020               	movlb	0	; select bank0
  1384  066F  00DE               	movwf	??_main
  1385  0670  085E               	movf	??_main,w
  1386  0671  07E2               	addwf	_timeout,f
  1387  0672  300C               	movlw	12
  1388  0673  0262               	subwf	_timeout,w
  1389  0674  1803               	btfsc	3,0
  1390                           
  1391                           ;main.c: 150: if(RC0==1 && RC1==0){
  1392  0675  1C0E               	btfss	14,0	;volatile
  1393  0676  2E79               	goto	l1764
  1394  0677  1C8E               	btfss	14,1	;volatile
  1395  0678  0001               	reset	;# 
  1396  0679                     l1764:	
  1397                           
  1398                           ;main.c: 154: }
  1399                           ;main.c: 155: }
  1400                           ;main.c: 157: }
  1401                           ;main.c: 159: if (timer_1s >= 10){
  1402  0679  300A               	movlw	10
  1403  067A  0020               	movlb	0	; select bank0
  1404  067B  0267               	subwf	_timer_1s,w
  1405  067C  1C03               	skipc
  1406  067D  2E3C               	goto	l1724
  1407                           
  1408                           ;main.c: 160: timer_1s=0;
  1409  067E  01E7               	clrf	_timer_1s
  1410                           
  1411                           ;main.c: 161: cont++;
  1412  067F  3001               	movlw	1
  1413  0680  00DE               	movwf	??_main
  1414  0681  085E               	movf	??_main,w
  1415  0682  0021               	movlb	1	; select bank1
  1416  0683  07B6               	addwf	_cont^(0+128),f
  1417  0684  2E3C               	goto	l1724
  1418  0685                     __end_of_main:	
  1419                           
  1420                           	psect	text1
  1421  06BB                     __ptext1:	
  1422 ;; *************** function _readButton *****************
  1423 ;; Defined at:
  1424 ;;		line 178 in file "main.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;		None               void
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1438 ;;      Params:         0       0       0       0
  1439 ;;      Locals:         0       0       0       0
  1440 ;;      Temps:          0       1       0       0
  1441 ;;      Totals:         0       1       0       0
  1442 ;;Total ram usage:        1 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    1
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_main
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           
  1453                           ;psect for function _readButton
  1454  06BB                     _readButton:	
  1455                           
  1456                           ;main.c: 179: if(RA0==1){
  1457                           
  1458                           ;incstack = 0
  1459                           ; Regs used in _readButton: [wreg+status,2+status,0]
  1460  06BB  0020               	movlb	0	; select bank0
  1461  06BC  1C0C               	btfss	12,0	;volatile
  1462  06BD  2EC7               	goto	l1974
  1463                           
  1464                           ;main.c: 180: if(timer_fail < timer_debounce) {timer_fail++;}
  1465  06BE  087C               	movf	_timer_debounce,w
  1466  06BF  027A               	subwf	_timer_fail,w
  1467  06C0  1803               	skipnc
  1468  06C1  2ECB               	goto	l1978
  1469  06C2  3001               	movlw	1
  1470  06C3  00A0               	movwf	??_readButton
  1471  06C4  0820               	movf	??_readButton,w
  1472  06C5  07FA               	addwf	_timer_fail,f
  1473                           
  1474                           ;main.c: 181: }
  1475  06C6  2ECB               	goto	l1978
  1476  06C7                     l1974:	
  1477                           
  1478                           ;main.c: 182: else{
  1479                           ;main.c: 183: if(timer_fail > 0) {timer_fail=0;}
  1480  06C7  087A               	movf	_timer_fail,w
  1481  06C8  1903               	btfsc	3,2
  1482  06C9  2ECB               	goto	l1978
  1483  06CA  01FA               	clrf	_timer_fail
  1484  06CB                     l1978:	
  1485                           
  1486                           ;main.c: 184: }
  1487                           ;main.c: 185: if(timer_fail == timer_debounce){
  1488  06CB  087A               	movf	_timer_fail,w
  1489  06CC  067C               	xorwf	_timer_debounce,w
  1490  06CD  1D03               	skipz
  1491  06CE  2EDE               	goto	l174
  1492                           
  1493                           ;main.c: 186: button_ok=1;
  1494  06CF  147D               	bsf	_button_ok/(0+8),_button_ok& (0+7)
  1495                           
  1496                           ;main.c: 187: vscale=53.5;
  1497  06D0  3000               	movlw	0
  1498  06D1  0021               	movlb	1	; select bank1
  1499  06D2  00AC               	movwf	_vscale^(0+128)
  1500  06D3  3056               	movlw	86
  1501  06D4  00AD               	movwf	(_vscale+1)^(0+128)
  1502  06D5  3042               	movlw	66
  1503  06D6  00AE               	movwf	(_vscale+2)^(0+128)
  1504                           
  1505                           ;main.c: 188: iscale=42.8;
  1506  06D7  3033               	movlw	51
  1507  06D8  00B9               	movwf	_iscale^(0+128)
  1508  06D9  302B               	movlw	43
  1509  06DA  00BA               	movwf	(_iscale+1)^(0+128)
  1510  06DB  3042               	movlw	66
  1511  06DC  00BB               	movwf	(_iscale+2)^(0+128)
  1512                           
  1513                           ;main.c: 189: }
  1514  06DD  0008               	return
  1515  06DE                     l174:	
  1516                           
  1517                           ;main.c: 190: else{
  1518                           ;main.c: 191: button_ok=0;
  1519  06DE  107D               	bcf	_button_ok/(0+8),_button_ok& (0+7)
  1520                           
  1521                           ;main.c: 192: vscale=50;
  1522  06DF  3000               	movlw	0
  1523  06E0  0021               	movlb	1	; select bank1
  1524  06E1  00AC               	movwf	_vscale^(0+128)
  1525  06E2  3048               	movlw	72
  1526  06E3  00AD               	movwf	(_vscale+1)^(0+128)
  1527  06E4  3042               	movlw	66
  1528  06E5  00AE               	movwf	(_vscale+2)^(0+128)
  1529                           
  1530                           ;main.c: 193: iscale=40;
  1531  06E6  3000               	movlw	0
  1532  06E7  00B9               	movwf	_iscale^(0+128)
  1533  06E8  3020               	movlw	32
  1534  06E9  00BA               	movwf	(_iscale+1)^(0+128)
  1535  06EA  3042               	movlw	66
  1536  06EB  00BB               	movwf	(_iscale+2)^(0+128)
  1537  06EC  0008               	return
  1538  06ED                     __end_of_readButton:	
  1539                           
  1540                           	psect	text2
  1541  0098                     __ptext2:	
  1542 ;; *************** function _displayCharge *****************
  1543 ;; Defined at:
  1544 ;;		line 244 in file "main.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  adc_buffer_l    2   12[BANK0 ] int 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;		None               void
  1551 ;; Registers used:
  1552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1558 ;;      Params:         0       0       0       0
  1559 ;;      Locals:         0       2       0       0
  1560 ;;      Temps:          0       4       0       0
  1561 ;;      Totals:         0       6       0       0
  1562 ;;Total ram usage:        6 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    2
  1565 ;; This function calls:
  1566 ;;		_lightupLed
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _displayCharge
  1574  0098                     _displayCharge:	
  1575                           
  1576                           ;main.c: 245: int adc_buffer_last=adc_buffer;
  1577                           
  1578                           ;incstack = 0
  1579                           ; Regs used in _displayCharge: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1580  0098  0021               	movlb	1	; select bank1
  1581  0099  0830               	movf	(_adc_buffer+1)^(0+128),w
  1582  009A  0020               	movlb	0	; select bank0
  1583  009B  01AD               	clrf	displayCharge@adc_buffer_last+1
  1584  009C  07AD               	addwf	displayCharge@adc_buffer_last+1,f
  1585  009D  0021               	movlb	1	; select bank1
  1586  009E  082F               	movf	_adc_buffer^(0+128),w
  1587  009F  0020               	movlb	0	; select bank0
  1588  00A0  01AC               	clrf	displayCharge@adc_buffer_last
  1589  00A1  07AC               	addwf	displayCharge@adc_buffer_last,f
  1590                           
  1591                           ;main.c: 247: if(vbatt < (VTH[0]+vhyst)){
  1592  00A2  085F               	movf	_vhyst,w
  1593  00A3  0021               	movlb	1	; select bank1
  1594  00A4  073C               	addwf	_VTH^(0+128),w
  1595  00A5  0020               	movlb	0	; select bank0
  1596  00A6  00A8               	movwf	??_displayCharge
  1597  00A7  0860               	movf	_vhyst+1,w
  1598  00A8  0021               	movlb	1	; select bank1
  1599  00A9  3D3D               	addwfc	(_VTH+1)^(0+128),w
  1600  00AA  0020               	movlb	0	; select bank0
  1601  00AB  00A9               	movwf	??_displayCharge+1
  1602  00AC  0829               	movf	??_displayCharge+1,w
  1603  00AD  026B               	subwf	_vbatt+1,w
  1604  00AE  1D03               	skipz
  1605  00AF  28B2               	goto	u1295
  1606  00B0  0828               	movf	??_displayCharge,w
  1607  00B1  026A               	subwf	_vbatt,w
  1608  00B2                     u1295:	
  1609  00B2  1803               	skipnc
  1610  00B3  28DE               	goto	l1898
  1611                           
  1612                           ;main.c: 248: if((VTH[0]-vbatt) > vtol) {vhyst=0;}
  1613  00B4  096A               	comf	_vbatt,w
  1614  00B5  00A8               	movwf	??_displayCharge
  1615  00B6  096B               	comf	_vbatt+1,w
  1616  00B7  00A9               	movwf	??_displayCharge+1
  1617  00B8  0AA8               	incf	??_displayCharge,f
  1618  00B9  1903               	skipnz
  1619  00BA  0AA9               	incf	??_displayCharge+1,f
  1620  00BB  0021               	movlb	1	; select bank1
  1621  00BC  083C               	movf	_VTH^(0+128),w
  1622  00BD  0020               	movlb	0	; select bank0
  1623  00BE  0728               	addwf	??_displayCharge,w
  1624  00BF  00AA               	movwf	??_displayCharge+2
  1625  00C0  0021               	movlb	1	; select bank1
  1626  00C1  083D               	movf	(_VTH+1)^(0+128),w
  1627  00C2  0020               	movlb	0	; select bank0
  1628  00C3  3D29               	addwfc	??_displayCharge+1,w
  1629  00C4  00AB               	movwf	??_displayCharge+3
  1630  00C5  082B               	movf	??_displayCharge+3,w
  1631  00C6  026D               	subwf	_vtol+1,w
  1632  00C7  1D03               	skipz
  1633  00C8  28CB               	goto	u1305
  1634  00C9  082A               	movf	??_displayCharge+2,w
  1635  00CA  026C               	subwf	_vtol,w
  1636  00CB                     u1305:	
  1637  00CB  1803               	skipnc
  1638  00CC  28D0               	goto	l1892
  1639  00CD  01DF               	clrf	_vhyst
  1640  00CE  01E0               	clrf	_vhyst+1
  1641  00CF  28D6               	goto	l1894
  1642  00D0                     l1892:	
  1643                           
  1644                           ;main.c: 249: else {vhyst=vtol;}
  1645  00D0  086D               	movf	_vtol+1,w
  1646  00D1  01E0               	clrf	_vhyst+1
  1647  00D2  07E0               	addwf	_vhyst+1,f
  1648  00D3  086C               	movf	_vtol,w
  1649  00D4  01DF               	clrf	_vhyst
  1650  00D5  07DF               	addwf	_vhyst,f
  1651  00D6                     l1894:	
  1652                           
  1653                           ;main.c: 250: blink_ds=6;
  1654  00D6  3006               	movlw	6
  1655  00D7  00A8               	movwf	??_displayCharge
  1656  00D8  0828               	movf	??_displayCharge,w
  1657  00D9  00EF               	movwf	_blink_ds
  1658                           
  1659                           ;main.c: 251: lightupLed(0b00010001);
  1660  00DA  3011               	movlw	17
  1661  00DB  3185  25DD         	fcall	_lightupLed
  1662                           
  1663                           ;main.c: 252: }
  1664  00DD  0008               	return
  1665  00DE                     l1898:	
  1666                           
  1667                           ;main.c: 253: else if(vbatt < (VTH[1]+vhyst)){
  1668  00DE  0020               	movlb	0	; select bank0
  1669  00DF  085F               	movf	_vhyst,w
  1670  00E0  0021               	movlb	1	; select bank1
  1671  00E1  073E               	addwf	(_VTH^(0+128)+2),w
  1672  00E2  0020               	movlb	0	; select bank0
  1673  00E3  00A8               	movwf	??_displayCharge
  1674  00E4  0860               	movf	_vhyst+1,w
  1675  00E5  0021               	movlb	1	; select bank1
  1676  00E6  3D3F               	addwfc	((_VTH+1)^(0+128)+2),w
  1677  00E7  0020               	movlb	0	; select bank0
  1678  00E8  00A9               	movwf	??_displayCharge+1
  1679  00E9  0829               	movf	??_displayCharge+1,w
  1680  00EA  026B               	subwf	_vbatt+1,w
  1681  00EB  1D03               	skipz
  1682  00EC  28EF               	goto	u1315
  1683  00ED  0828               	movf	??_displayCharge,w
  1684  00EE  026A               	subwf	_vbatt,w
  1685  00EF                     u1315:	
  1686  00EF  1803               	skipnc
  1687  00F0  291B               	goto	l1910
  1688                           
  1689                           ;main.c: 254: if((VTH[1]-vbatt) > vtol) {vhyst=0;}
  1690  00F1  3002               	movlw	2
  1691  00F2  3EBC               	addlw	_VTH& (0+255)
  1692  00F3  0086               	movwf	6
  1693  00F4  0187               	clrf	7
  1694  00F5  096A               	comf	_vbatt,w
  1695  00F6  00A8               	movwf	??_displayCharge
  1696  00F7  096B               	comf	_vbatt+1,w
  1697  00F8  00A9               	movwf	??_displayCharge+1
  1698  00F9  0AA8               	incf	??_displayCharge,f
  1699  00FA  1903               	skipnz
  1700  00FB  0AA9               	incf	??_displayCharge+1,f
  1701  00FC  3F40               	moviw [0]fsr1
  1702  00FD  0728               	addwf	??_displayCharge,w
  1703  00FE  00AA               	movwf	??_displayCharge+2
  1704  00FF  3F41               	moviw [1]fsr1
  1705  0100  3D29               	addwfc	??_displayCharge+1,w
  1706  0101  00AB               	movwf	??_displayCharge+3
  1707  0102  082B               	movf	??_displayCharge+3,w
  1708  0103  026D               	subwf	_vtol+1,w
  1709  0104  1D03               	skipz
  1710  0105  2908               	goto	u1325
  1711  0106  082A               	movf	??_displayCharge+2,w
  1712  0107  026C               	subwf	_vtol,w
  1713  0108                     u1325:	
  1714  0108  1803               	skipnc
  1715  0109  290D               	goto	l1904
  1716  010A  01DF               	clrf	_vhyst
  1717  010B  01E0               	clrf	_vhyst+1
  1718  010C  2913               	goto	l1906
  1719  010D                     l1904:	
  1720                           
  1721                           ;main.c: 255: else {vhyst=vtol;}
  1722  010D  086D               	movf	_vtol+1,w
  1723  010E  01E0               	clrf	_vhyst+1
  1724  010F  07E0               	addwf	_vhyst+1,f
  1725  0110  086C               	movf	_vtol,w
  1726  0111  01DF               	clrf	_vhyst
  1727  0112  07DF               	addwf	_vhyst,f
  1728  0113                     l1906:	
  1729                           
  1730                           ;main.c: 256: blink_ds=15;
  1731  0113  300F               	movlw	15
  1732  0114  00A8               	movwf	??_displayCharge
  1733  0115  0828               	movf	??_displayCharge,w
  1734  0116  00EF               	movwf	_blink_ds
  1735                           
  1736                           ;main.c: 257: lightupLed(0b00010001);
  1737  0117  3011               	movlw	17
  1738  0118  3185  25DD         	fcall	_lightupLed
  1739                           
  1740                           ;main.c: 258: }
  1741  011A  0008               	return
  1742  011B                     l1910:	
  1743                           
  1744                           ;main.c: 259: else if(vbatt < (VTH[2]+vhyst)){
  1745  011B  0020               	movlb	0	; select bank0
  1746  011C  085F               	movf	_vhyst,w
  1747  011D  0021               	movlb	1	; select bank1
  1748  011E  0740               	addwf	(_VTH^(0+128)+4),w
  1749  011F  0020               	movlb	0	; select bank0
  1750  0120  00A8               	movwf	??_displayCharge
  1751  0121  0860               	movf	_vhyst+1,w
  1752  0122  0021               	movlb	1	; select bank1
  1753  0123  3D41               	addwfc	((_VTH+1)^(0+128)+4),w
  1754  0124  0020               	movlb	0	; select bank0
  1755  0125  00A9               	movwf	??_displayCharge+1
  1756  0126  0829               	movf	??_displayCharge+1,w
  1757  0127  026B               	subwf	_vbatt+1,w
  1758  0128  1D03               	skipz
  1759  0129  292C               	goto	u1335
  1760  012A  0828               	movf	??_displayCharge,w
  1761  012B  026A               	subwf	_vbatt,w
  1762  012C                     u1335:	
  1763  012C  1803               	skipnc
  1764  012D  2954               	goto	l1920
  1765                           
  1766                           ;main.c: 260: if((VTH[2]-vbatt) > vtol) {vhyst=0;}
  1767  012E  3004               	movlw	4
  1768  012F  3EBC               	addlw	_VTH& (0+255)
  1769  0130  0086               	movwf	6
  1770  0131  0187               	clrf	7
  1771  0132  096A               	comf	_vbatt,w
  1772  0133  00A8               	movwf	??_displayCharge
  1773  0134  096B               	comf	_vbatt+1,w
  1774  0135  00A9               	movwf	??_displayCharge+1
  1775  0136  0AA8               	incf	??_displayCharge,f
  1776  0137  1903               	skipnz
  1777  0138  0AA9               	incf	??_displayCharge+1,f
  1778  0139  3F40               	moviw [0]fsr1
  1779  013A  0728               	addwf	??_displayCharge,w
  1780  013B  00AA               	movwf	??_displayCharge+2
  1781  013C  3F41               	moviw [1]fsr1
  1782  013D  3D29               	addwfc	??_displayCharge+1,w
  1783  013E  00AB               	movwf	??_displayCharge+3
  1784  013F  082B               	movf	??_displayCharge+3,w
  1785  0140  026D               	subwf	_vtol+1,w
  1786  0141  1D03               	skipz
  1787  0142  2945               	goto	u1345
  1788  0143  082A               	movf	??_displayCharge+2,w
  1789  0144  026C               	subwf	_vtol,w
  1790  0145                     u1345:	
  1791  0145  1803               	skipnc
  1792  0146  294A               	goto	l1916
  1793  0147  01DF               	clrf	_vhyst
  1794  0148  01E0               	clrf	_vhyst+1
  1795  0149  2950               	goto	l1918
  1796  014A                     l1916:	
  1797                           
  1798                           ;main.c: 261: else {vhyst=vtol;}
  1799  014A  086D               	movf	_vtol+1,w
  1800  014B  01E0               	clrf	_vhyst+1
  1801  014C  07E0               	addwf	_vhyst+1,f
  1802  014D  086C               	movf	_vtol,w
  1803  014E  01DF               	clrf	_vhyst
  1804  014F  07DF               	addwf	_vhyst,f
  1805  0150                     l1918:	
  1806                           
  1807                           ;main.c: 262: lightupLed(0b00000001);
  1808  0150  3001               	movlw	1
  1809  0151  3185  25DD         	fcall	_lightupLed
  1810                           
  1811                           ;main.c: 263: }
  1812  0153  0008               	return
  1813  0154                     l1920:	
  1814                           
  1815                           ;main.c: 264: else if(vbatt < (VTH[3]+vhyst)){
  1816  0154  0020               	movlb	0	; select bank0
  1817  0155  085F               	movf	_vhyst,w
  1818  0156  0021               	movlb	1	; select bank1
  1819  0157  0742               	addwf	(_VTH^(0+128)+6),w
  1820  0158  0020               	movlb	0	; select bank0
  1821  0159  00A8               	movwf	??_displayCharge
  1822  015A  0860               	movf	_vhyst+1,w
  1823  015B  0021               	movlb	1	; select bank1
  1824  015C  3D43               	addwfc	((_VTH+1)^(0+128)+6),w
  1825  015D  0020               	movlb	0	; select bank0
  1826  015E  00A9               	movwf	??_displayCharge+1
  1827  015F  0829               	movf	??_displayCharge+1,w
  1828  0160  026B               	subwf	_vbatt+1,w
  1829  0161  1D03               	skipz
  1830  0162  2965               	goto	u1355
  1831  0163  0828               	movf	??_displayCharge,w
  1832  0164  026A               	subwf	_vbatt,w
  1833  0165                     u1355:	
  1834  0165  1803               	skipnc
  1835  0166  298D               	goto	l1930
  1836                           
  1837                           ;main.c: 265: if((VTH[3]-vbatt) > vtol) {vhyst=0;}
  1838  0167  3006               	movlw	6
  1839  0168  3EBC               	addlw	_VTH& (0+255)
  1840  0169  0086               	movwf	6
  1841  016A  0187               	clrf	7
  1842  016B  096A               	comf	_vbatt,w
  1843  016C  00A8               	movwf	??_displayCharge
  1844  016D  096B               	comf	_vbatt+1,w
  1845  016E  00A9               	movwf	??_displayCharge+1
  1846  016F  0AA8               	incf	??_displayCharge,f
  1847  0170  1903               	skipnz
  1848  0171  0AA9               	incf	??_displayCharge+1,f
  1849  0172  3F40               	moviw [0]fsr1
  1850  0173  0728               	addwf	??_displayCharge,w
  1851  0174  00AA               	movwf	??_displayCharge+2
  1852  0175  3F41               	moviw [1]fsr1
  1853  0176  3D29               	addwfc	??_displayCharge+1,w
  1854  0177  00AB               	movwf	??_displayCharge+3
  1855  0178  082B               	movf	??_displayCharge+3,w
  1856  0179  026D               	subwf	_vtol+1,w
  1857  017A  1D03               	skipz
  1858  017B  297E               	goto	u1365
  1859  017C  082A               	movf	??_displayCharge+2,w
  1860  017D  026C               	subwf	_vtol,w
  1861  017E                     u1365:	
  1862  017E  1803               	skipnc
  1863  017F  2983               	goto	l1926
  1864  0180  01DF               	clrf	_vhyst
  1865  0181  01E0               	clrf	_vhyst+1
  1866  0182  2989               	goto	l1928
  1867  0183                     l1926:	
  1868                           
  1869                           ;main.c: 266: else {vhyst=vtol;}
  1870  0183  086D               	movf	_vtol+1,w
  1871  0184  01E0               	clrf	_vhyst+1
  1872  0185  07E0               	addwf	_vhyst+1,f
  1873  0186  086C               	movf	_vtol,w
  1874  0187  01DF               	clrf	_vhyst
  1875  0188  07DF               	addwf	_vhyst,f
  1876  0189                     l1928:	
  1877                           
  1878                           ;main.c: 267: lightupLed(0b00000011);
  1879  0189  3003               	movlw	3
  1880  018A  3185  25DD         	fcall	_lightupLed
  1881                           
  1882                           ;main.c: 268: }
  1883  018C  0008               	return
  1884  018D                     l1930:	
  1885                           
  1886                           ;main.c: 269: else if(vbatt < (VTH[4]+vhyst)){
  1887  018D  0020               	movlb	0	; select bank0
  1888  018E  085F               	movf	_vhyst,w
  1889  018F  0021               	movlb	1	; select bank1
  1890  0190  0744               	addwf	(_VTH^(0+128)+8),w
  1891  0191  0020               	movlb	0	; select bank0
  1892  0192  00A8               	movwf	??_displayCharge
  1893  0193  0860               	movf	_vhyst+1,w
  1894  0194  0021               	movlb	1	; select bank1
  1895  0195  3D45               	addwfc	((_VTH+1)^(0+128)+8),w
  1896  0196  0020               	movlb	0	; select bank0
  1897  0197  00A9               	movwf	??_displayCharge+1
  1898  0198  0829               	movf	??_displayCharge+1,w
  1899  0199  026B               	subwf	_vbatt+1,w
  1900  019A  1D03               	skipz
  1901  019B  299E               	goto	u1375
  1902  019C  0828               	movf	??_displayCharge,w
  1903  019D  026A               	subwf	_vbatt,w
  1904  019E                     u1375:	
  1905  019E  1803               	skipnc
  1906  019F  29C6               	goto	l1940
  1907                           
  1908                           ;main.c: 270: if((VTH[4]-vbatt) > vtol) {vhyst=0;}
  1909  01A0  3008               	movlw	8
  1910  01A1  3EBC               	addlw	_VTH& (0+255)
  1911  01A2  0086               	movwf	6
  1912  01A3  0187               	clrf	7
  1913  01A4  096A               	comf	_vbatt,w
  1914  01A5  00A8               	movwf	??_displayCharge
  1915  01A6  096B               	comf	_vbatt+1,w
  1916  01A7  00A9               	movwf	??_displayCharge+1
  1917  01A8  0AA8               	incf	??_displayCharge,f
  1918  01A9  1903               	skipnz
  1919  01AA  0AA9               	incf	??_displayCharge+1,f
  1920  01AB  3F40               	moviw [0]fsr1
  1921  01AC  0728               	addwf	??_displayCharge,w
  1922  01AD  00AA               	movwf	??_displayCharge+2
  1923  01AE  3F41               	moviw [1]fsr1
  1924  01AF  3D29               	addwfc	??_displayCharge+1,w
  1925  01B0  00AB               	movwf	??_displayCharge+3
  1926  01B1  082B               	movf	??_displayCharge+3,w
  1927  01B2  026D               	subwf	_vtol+1,w
  1928  01B3  1D03               	skipz
  1929  01B4  29B7               	goto	u1385
  1930  01B5  082A               	movf	??_displayCharge+2,w
  1931  01B6  026C               	subwf	_vtol,w
  1932  01B7                     u1385:	
  1933  01B7  1803               	skipnc
  1934  01B8  29BC               	goto	l1936
  1935  01B9  01DF               	clrf	_vhyst
  1936  01BA  01E0               	clrf	_vhyst+1
  1937  01BB  29C2               	goto	l1938
  1938  01BC                     l1936:	
  1939                           
  1940                           ;main.c: 271: else {vhyst=vtol;}
  1941  01BC  086D               	movf	_vtol+1,w
  1942  01BD  01E0               	clrf	_vhyst+1
  1943  01BE  07E0               	addwf	_vhyst+1,f
  1944  01BF  086C               	movf	_vtol,w
  1945  01C0  01DF               	clrf	_vhyst
  1946  01C1  07DF               	addwf	_vhyst,f
  1947  01C2                     l1938:	
  1948                           
  1949                           ;main.c: 272: lightupLed(0b00000111);
  1950  01C2  3007               	movlw	7
  1951  01C3  3185  25DD         	fcall	_lightupLed
  1952                           
  1953                           ;main.c: 273: }
  1954  01C5  0008               	return
  1955  01C6                     l1940:	
  1956                           
  1957                           ;main.c: 274: else if(vbatt < (VTH[5]+vhyst)){
  1958  01C6  0020               	movlb	0	; select bank0
  1959  01C7  085F               	movf	_vhyst,w
  1960  01C8  0021               	movlb	1	; select bank1
  1961  01C9  0746               	addwf	(_VTH^(0+128)+10),w
  1962  01CA  0020               	movlb	0	; select bank0
  1963  01CB  00A8               	movwf	??_displayCharge
  1964  01CC  0860               	movf	_vhyst+1,w
  1965  01CD  0021               	movlb	1	; select bank1
  1966  01CE  3D47               	addwfc	((_VTH+1)^(0+128)+10),w
  1967  01CF  0020               	movlb	0	; select bank0
  1968  01D0  00A9               	movwf	??_displayCharge+1
  1969  01D1  0829               	movf	??_displayCharge+1,w
  1970  01D2  026B               	subwf	_vbatt+1,w
  1971  01D3  1D03               	skipz
  1972  01D4  29D7               	goto	u1395
  1973  01D5  0828               	movf	??_displayCharge,w
  1974  01D6  026A               	subwf	_vbatt,w
  1975  01D7                     u1395:	
  1976  01D7  1803               	skipnc
  1977  01D8  29FF               	goto	l1950
  1978                           
  1979                           ;main.c: 275: if((VTH[5]-vbatt) > vtol) {vhyst=0;}
  1980  01D9  300A               	movlw	10
  1981  01DA  3EBC               	addlw	_VTH& (0+255)
  1982  01DB  0086               	movwf	6
  1983  01DC  0187               	clrf	7
  1984  01DD  096A               	comf	_vbatt,w
  1985  01DE  00A8               	movwf	??_displayCharge
  1986  01DF  096B               	comf	_vbatt+1,w
  1987  01E0  00A9               	movwf	??_displayCharge+1
  1988  01E1  0AA8               	incf	??_displayCharge,f
  1989  01E2  1903               	skipnz
  1990  01E3  0AA9               	incf	??_displayCharge+1,f
  1991  01E4  3F40               	moviw [0]fsr1
  1992  01E5  0728               	addwf	??_displayCharge,w
  1993  01E6  00AA               	movwf	??_displayCharge+2
  1994  01E7  3F41               	moviw [1]fsr1
  1995  01E8  3D29               	addwfc	??_displayCharge+1,w
  1996  01E9  00AB               	movwf	??_displayCharge+3
  1997  01EA  082B               	movf	??_displayCharge+3,w
  1998  01EB  026D               	subwf	_vtol+1,w
  1999  01EC  1D03               	skipz
  2000  01ED  29F0               	goto	u1405
  2001  01EE  082A               	movf	??_displayCharge+2,w
  2002  01EF  026C               	subwf	_vtol,w
  2003  01F0                     u1405:	
  2004  01F0  1803               	skipnc
  2005  01F1  29F5               	goto	l1946
  2006  01F2  01DF               	clrf	_vhyst
  2007  01F3  01E0               	clrf	_vhyst+1
  2008  01F4  29FB               	goto	l1948
  2009  01F5                     l1946:	
  2010                           
  2011                           ;main.c: 276: else {vhyst=vtol;}
  2012  01F5  086D               	movf	_vtol+1,w
  2013  01F6  01E0               	clrf	_vhyst+1
  2014  01F7  07E0               	addwf	_vhyst+1,f
  2015  01F8  086C               	movf	_vtol,w
  2016  01F9  01DF               	clrf	_vhyst
  2017  01FA  07DF               	addwf	_vhyst,f
  2018  01FB                     l1948:	
  2019                           
  2020                           ;main.c: 277: lightupLed(0b00001111);
  2021  01FB  300F               	movlw	15
  2022  01FC  3185  25DD         	fcall	_lightupLed
  2023                           
  2024                           ;main.c: 278: }
  2025  01FE  0008               	return
  2026  01FF                     l1950:	
  2027                           
  2028                           ;main.c: 279: else if(vbatt < (VTH[6]+vhyst)){
  2029  01FF  0020               	movlb	0	; select bank0
  2030  0200  085F               	movf	_vhyst,w
  2031  0201  0021               	movlb	1	; select bank1
  2032  0202  0748               	addwf	(_VTH^(0+128)+12),w
  2033  0203  0020               	movlb	0	; select bank0
  2034  0204  00A8               	movwf	??_displayCharge
  2035  0205  0860               	movf	_vhyst+1,w
  2036  0206  0021               	movlb	1	; select bank1
  2037  0207  3D49               	addwfc	((_VTH+1)^(0+128)+12),w
  2038  0208  0020               	movlb	0	; select bank0
  2039  0209  00A9               	movwf	??_displayCharge+1
  2040  020A  0829               	movf	??_displayCharge+1,w
  2041  020B  026B               	subwf	_vbatt+1,w
  2042  020C  1D03               	skipz
  2043  020D  2A10               	goto	u1415
  2044  020E  0828               	movf	??_displayCharge,w
  2045  020F  026A               	subwf	_vbatt,w
  2046  0210                     u1415:	
  2047  0210  1803               	skipnc
  2048  0211  2A3C               	goto	l1962
  2049                           
  2050                           ;main.c: 280: if((VTH[6]-vbatt) > vtol) {vhyst=0;}
  2051  0212  300C               	movlw	12
  2052  0213  3EBC               	addlw	_VTH& (0+255)
  2053  0214  0086               	movwf	6
  2054  0215  0187               	clrf	7
  2055  0216  096A               	comf	_vbatt,w
  2056  0217  00A8               	movwf	??_displayCharge
  2057  0218  096B               	comf	_vbatt+1,w
  2058  0219  00A9               	movwf	??_displayCharge+1
  2059  021A  0AA8               	incf	??_displayCharge,f
  2060  021B  1903               	skipnz
  2061  021C  0AA9               	incf	??_displayCharge+1,f
  2062  021D  3F40               	moviw [0]fsr1
  2063  021E  0728               	addwf	??_displayCharge,w
  2064  021F  00AA               	movwf	??_displayCharge+2
  2065  0220  3F41               	moviw [1]fsr1
  2066  0221  3D29               	addwfc	??_displayCharge+1,w
  2067  0222  00AB               	movwf	??_displayCharge+3
  2068  0223  082B               	movf	??_displayCharge+3,w
  2069  0224  026D               	subwf	_vtol+1,w
  2070  0225  1D03               	skipz
  2071  0226  2A29               	goto	u1425
  2072  0227  082A               	movf	??_displayCharge+2,w
  2073  0228  026C               	subwf	_vtol,w
  2074  0229                     u1425:	
  2075  0229  1803               	skipnc
  2076  022A  2A2E               	goto	l1956
  2077  022B  01DF               	clrf	_vhyst
  2078  022C  01E0               	clrf	_vhyst+1
  2079  022D  2A34               	goto	l1958
  2080  022E                     l1956:	
  2081                           
  2082                           ;main.c: 281: else {vhyst=vtol;}
  2083  022E  086D               	movf	_vtol+1,w
  2084  022F  01E0               	clrf	_vhyst+1
  2085  0230  07E0               	addwf	_vhyst+1,f
  2086  0231  086C               	movf	_vtol,w
  2087  0232  01DF               	clrf	_vhyst
  2088  0233  07DF               	addwf	_vhyst,f
  2089  0234                     l1958:	
  2090                           
  2091                           ;main.c: 282: blink_ds=15;
  2092  0234  300F               	movlw	15
  2093  0235  00A8               	movwf	??_displayCharge
  2094  0236  0828               	movf	??_displayCharge,w
  2095  0237  00EF               	movwf	_blink_ds
  2096                           
  2097                           ;main.c: 283: lightupLed(0b00001111);
  2098  0238  300F               	movlw	15
  2099  0239  3185  25DD         	fcall	_lightupLed
  2100                           
  2101                           ;main.c: 284: }
  2102  023B  0008               	return
  2103  023C                     l1962:	
  2104                           
  2105                           ;main.c: 285: else{
  2106                           ;main.c: 286: vhyst=0;
  2107  023C  0020               	movlb	0	; select bank0
  2108  023D  01DF               	clrf	_vhyst
  2109  023E  01E0               	clrf	_vhyst+1
  2110                           
  2111                           ;main.c: 287: blink_ds=6;
  2112  023F  3006               	movlw	6
  2113  0240  00A8               	movwf	??_displayCharge
  2114  0241  0828               	movf	??_displayCharge,w
  2115  0242  00EF               	movwf	_blink_ds
  2116                           
  2117                           ;main.c: 288: lightupLed(0b00011111);
  2118  0243  301F               	movlw	31
  2119  0244  3185  25DD         	fcall	_lightupLed
  2120  0246  0008               	return
  2121  0247                     __end_of_displayCharge:	
  2122                           
  2123                           	psect	text3
  2124  05DD                     __ptext3:	
  2125 ;; *************** function _lightupLed *****************
  2126 ;; Defined at:
  2127 ;;		line 297 in file "main.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  lightup         1    wreg     unsigned char 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  lightup         1    7[BANK0 ] unsigned char 
  2132 ;;  blink           1    6[BANK0 ] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;		None               void
  2135 ;; Registers used:
  2136 ;;		wreg, status,2, status,0
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2142 ;;      Params:         0       0       0       0
  2143 ;;      Locals:         0       6       0       0
  2144 ;;      Temps:          0       2       0       0
  2145 ;;      Totals:         0       8       0       0
  2146 ;;Total ram usage:        8 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    1
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_displayCharge
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _lightupLed
  2158  05DD                     _lightupLed:	
  2159                           
  2160                           ;incstack = 0
  2161                           ; Regs used in _lightupLed: [wreg+status,2+status,0]
  2162                           ;lightupLed@lightup stored from wreg
  2163  05DD  0020               	movlb	0	; select bank0
  2164  05DE  00A7               	movwf	lightupLed@lightup
  2165                           
  2166                           ;main.c: 299: char blink = toggle & (lightup>>4 & 0x01);
  2167  05DF  0827               	movf	lightupLed@lightup,w
  2168  05E0  00A0               	movwf	??_lightupLed
  2169  05E1  3004               	movlw	4
  2170  05E2                     u1495:	
  2171  05E2  36A0               	lsrf	??_lightupLed,f
  2172  05E3  0B89               	decfsz	9,f
  2173  05E4  2DE2               	goto	u1495
  2174  05E5  0820               	movf	??_lightupLed,w
  2175  05E6  0569               	andwf	_toggle,w
  2176  05E7  3901               	andlw	1
  2177  05E8  00A1               	movwf	??_lightupLed+1
  2178  05E9  0821               	movf	??_lightupLed+1,w
  2179  05EA  00A6               	movwf	lightupLed@blink
  2180                           
  2181                           ;main.c: 300: RA2 = (!(lightup & 0x01)) || blink;
  2182  05EB  01A2               	clrf	_lightupLed$291
  2183  05EC  0AA2               	incf	_lightupLed$291,f
  2184  05ED  1C27               	btfss	lightupLed@lightup,0
  2185  05EE  2DF3               	goto	l2006
  2186  05EF  08A6               	movf	lightupLed@blink,f
  2187  05F0  1D03               	skipz
  2188  05F1  2DF3               	goto	l2006
  2189  05F2  01A2               	clrf	_lightupLed$291
  2190  05F3                     l2006:	
  2191  05F3  0822               	movf	_lightupLed$291,w
  2192  05F4  1D03               	skipz
  2193  05F5  150C               	bsf	12,2	;volatile
  2194  05F6  1903               	skipnz
  2195  05F7  110C               	bcf	12,2	;volatile
  2196                           
  2197                           ;main.c: 301: RA4 = (!(lightup>>1 & 0x01)) || blink;
  2198  05F8  01A3               	clrf	_lightupLed$292
  2199  05F9  0AA3               	incf	_lightupLed$292,f
  2200  05FA  0827               	movf	lightupLed@lightup,w
  2201  05FB  00A0               	movwf	??_lightupLed
  2202  05FC  3001               	movlw	1
  2203  05FD                     u1525:	
  2204  05FD  36A0               	lsrf	??_lightupLed,f
  2205  05FE  0B89               	decfsz	9,f
  2206  05FF  2DFD               	goto	u1525
  2207  0600  1C20               	btfss	??_lightupLed,0
  2208  0601  2E06               	goto	l2016
  2209  0602  08A6               	movf	lightupLed@blink,f
  2210  0603  1D03               	skipz
  2211  0604  2E06               	goto	l2016
  2212  0605  01A3               	clrf	_lightupLed$292
  2213  0606                     l2016:	
  2214  0606  0823               	movf	_lightupLed$292,w
  2215  0607  1D03               	skipz
  2216  0608  160C               	bsf	12,4	;volatile
  2217  0609  1903               	skipnz
  2218  060A  120C               	bcf	12,4	;volatile
  2219                           
  2220                           ;main.c: 302: RC5 = (!(lightup>>2 & 0x01)) || blink;
  2221  060B  01A4               	clrf	_lightupLed$293
  2222  060C  0AA4               	incf	_lightupLed$293,f
  2223  060D  0827               	movf	lightupLed@lightup,w
  2224  060E  00A0               	movwf	??_lightupLed
  2225  060F  3002               	movlw	2
  2226  0610                     u1555:	
  2227  0610  36A0               	lsrf	??_lightupLed,f
  2228  0611  0B89               	decfsz	9,f
  2229  0612  2E10               	goto	u1555
  2230  0613  1C20               	btfss	??_lightupLed,0
  2231  0614  2E19               	goto	l2026
  2232  0615  08A6               	movf	lightupLed@blink,f
  2233  0616  1D03               	skipz
  2234  0617  2E19               	goto	l2026
  2235  0618  01A4               	clrf	_lightupLed$293
  2236  0619                     l2026:	
  2237  0619  0824               	movf	_lightupLed$293,w
  2238  061A  1D03               	skipz
  2239  061B  168E               	bsf	14,5	;volatile
  2240  061C  1903               	skipnz
  2241  061D  128E               	bcf	14,5	;volatile
  2242                           
  2243                           ;main.c: 303: RC4 = (!(lightup>>3 & 0x01)) || blink;
  2244  061E  01A5               	clrf	_lightupLed$294
  2245  061F  0AA5               	incf	_lightupLed$294,f
  2246  0620  0827               	movf	lightupLed@lightup,w
  2247  0621  00A0               	movwf	??_lightupLed
  2248  0622  3003               	movlw	3
  2249  0623                     u1585:	
  2250  0623  36A0               	lsrf	??_lightupLed,f
  2251  0624  0B89               	decfsz	9,f
  2252  0625  2E23               	goto	u1585
  2253  0626  1C20               	btfss	??_lightupLed,0
  2254  0627  2E2C               	goto	l2036
  2255  0628  08A6               	movf	lightupLed@blink,f
  2256  0629  1D03               	skipz
  2257  062A  2E2C               	goto	l2036
  2258  062B  01A5               	clrf	_lightupLed$294
  2259  062C                     l2036:	
  2260  062C  0825               	movf	_lightupLed$294,w
  2261  062D  1D03               	skipz
  2262  062E  160E               	bsf	14,4	;volatile
  2263  062F  1903               	skipnz
  2264  0630  120E               	bcf	14,4	;volatile
  2265  0631  0008               	return
  2266  0632                     __end_of_lightupLed:	
  2267                           
  2268                           	psect	text4
  2269  0247                     __ptext4:	
  2270 ;; *************** function _measureBattery *****************
  2271 ;; Defined at:
  2272 ;;		line 201 in file "main.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;		None               void
  2279 ;; Registers used:
  2280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2286 ;;      Params:         0       0       0       0
  2287 ;;      Locals:         0       0       0       0
  2288 ;;      Temps:          0       4       0       0
  2289 ;;      Totals:         0       4       0       0
  2290 ;;Total ram usage:        4 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    3
  2293 ;; This function calls:
  2294 ;;		_read_adc
  2295 ;;		___ftdiv
  2296 ;;		___ftmul
  2297 ;;		___fttol
  2298 ;;		___lwtoft
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           
  2305                           ;psect for function _measureBattery
  2306  0247                     _measureBattery:	
  2307                           
  2308                           ;main.c: 202: if(!PIR1bits.ADIF) {
  2309                           
  2310                           ;incstack = 0
  2311                           ; Regs used in _measureBattery: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2312  0247  0020               	movlb	0	; select bank0
  2313  0248  1B11               	btfsc	17,6	;volatile
  2314  0249  0008               	return
  2315  024A  2B8E               	goto	l1884
  2316  024B                     l1848:	
  2317                           ;main.c: 204: case 7:
  2318                           
  2319                           ;main.c: 203: switch(adc_channel){
  2320                           
  2321                           
  2322                           ;main.c: 208: ibatt_hres=(float)(adc_buffer-0x0200)*iscale;
  2323  024B  0021               	movlb	1	; select bank1
  2324  024C  0839               	movf	_iscale^(0+128),w
  2325  024D  0020               	movlb	0	; select bank0
  2326  024E  00BC               	movwf	?___ftmul
  2327  024F  0021               	movlb	1	; select bank1
  2328  0250  083A               	movf	(_iscale+1)^(0+128),w
  2329  0251  0020               	movlb	0	; select bank0
  2330  0252  00BD               	movwf	?___ftmul+1
  2331  0253  0021               	movlb	1	; select bank1
  2332  0254  083B               	movf	(_iscale+2)^(0+128),w
  2333  0255  0020               	movlb	0	; select bank0
  2334  0256  00BE               	movwf	?___ftmul+2
  2335  0257  0021               	movlb	1	; select bank1
  2336  0258  082F               	movf	_adc_buffer^(0+128),w
  2337  0259  3E00               	addlw	0
  2338  025A  0020               	movlb	0	; select bank0
  2339  025B  00A8               	movwf	?___lwtoft
  2340  025C  30FE               	movlw	254
  2341  025D  0021               	movlb	1	; select bank1
  2342  025E  3D30               	addwfc	(_adc_buffer+1)^(0+128),w
  2343  025F  0020               	movlb	0	; select bank0
  2344  0260  00A9               	movwf	?___lwtoft+1
  2345  0261  3187  2743  3182   	fcall	___lwtoft
  2346  0264  0020               	movlb	0	; select bank0
  2347  0265  0828               	movf	?___lwtoft,w
  2348  0266  00BF               	movwf	?___ftmul+3
  2349  0267  0829               	movf	?___lwtoft+1,w
  2350  0268  00C0               	movwf	?___ftmul+4
  2351  0269  082A               	movf	?___lwtoft+2,w
  2352  026A  00C1               	movwf	?___ftmul+5
  2353  026B  3183  2398  3182   	fcall	___ftmul
  2354  026E  0020               	movlb	0	; select bank0
  2355  026F  083C               	movf	?___ftmul,w
  2356  0270  0021               	movlb	1	; select bank1
  2357  0271  00A6               	movwf	_ibatt_hres^(0+128)
  2358  0272  0020               	movlb	0	; select bank0
  2359  0273  083D               	movf	?___ftmul+1,w
  2360  0274  0021               	movlb	1	; select bank1
  2361  0275  00A7               	movwf	(_ibatt_hres+1)^(0+128)
  2362  0276  0020               	movlb	0	; select bank0
  2363  0277  083E               	movf	?___ftmul+2,w
  2364  0278  0021               	movlb	1	; select bank1
  2365  0279  00A8               	movwf	(_ibatt_hres+2)^(0+128)
  2366                           
  2367                           ;main.c: 209: ibatt=(signed int)ibatt_hres;
  2368  027A  0826               	movf	_ibatt_hres^(0+128),w
  2369  027B  0020               	movlb	0	; select bank0
  2370  027C  00CC               	movwf	?___fttol
  2371  027D  0021               	movlb	1	; select bank1
  2372  027E  0827               	movf	(_ibatt_hres+1)^(0+128),w
  2373  027F  0020               	movlb	0	; select bank0
  2374  0280  00CD               	movwf	?___fttol+1
  2375  0281  0021               	movlb	1	; select bank1
  2376  0282  0828               	movf	(_ibatt_hres+2)^(0+128),w
  2377  0283  0020               	movlb	0	; select bank0
  2378  0284  00CE               	movwf	?___fttol+2
  2379  0285  3184  24F5  3182   	fcall	___fttol
  2380  0288  0020               	movlb	0	; select bank0
  2381  0289  084D               	movf	?___fttol+1,w
  2382  028A  0021               	movlb	1	; select bank1
  2383  028B  01B4               	clrf	(_ibatt+1)^(0+128)
  2384  028C  07B4               	addwf	(_ibatt+1)^(0+128),f
  2385  028D  0020               	movlb	0	; select bank0
  2386  028E  084C               	movf	?___fttol,w
  2387  028F  0021               	movlb	1	; select bank1
  2388  0290  01B3               	clrf	_ibatt^(0+128)
  2389  0291  07B3               	addwf	_ibatt^(0+128),f
  2390                           
  2391                           ;main.c: 210: I2C_Array[2]=(ibatt>>8) & 0xFF;
  2392  0292  0834               	movf	(_ibatt+1)^(0+128),w
  2393  0293  0020               	movlb	0	; select bank0
  2394  0294  00DA               	movwf	??_measureBattery
  2395  0295  085A               	movf	??_measureBattery,w
  2396  0296  0021               	movlb	1	; select bank1
  2397  0297  00A2               	movwf	(_I2C_Array^(0+128)+2)	;volatile
  2398                           
  2399                           ;main.c: 211: I2C_Array[3]=ibatt & 0xFF;
  2400  0298  0833               	movf	_ibatt^(0+128),w
  2401  0299  0020               	movlb	0	; select bank0
  2402  029A  00DA               	movwf	??_measureBattery
  2403  029B  085A               	movf	??_measureBattery,w
  2404  029C  0021               	movlb	1	; select bank1
  2405  029D  00A3               	movwf	(_I2C_Array^(0+128)+3)	;volatile
  2406                           
  2407                           ;main.c: 212: read_adc(adc_channel);
  2408  029E  0020               	movlb	0	; select bank0
  2409  029F  086E               	movf	_adc_channel,w
  2410  02A0  3187  272B         	fcall	_read_adc
  2411                           
  2412                           ;main.c: 213: adc_channel=6;
  2413  02A2  3006               	movlw	6
  2414  02A3  0020               	movlb	0	; select bank0
  2415  02A4  00DA               	movwf	??_measureBattery
  2416  02A5  085A               	movf	??_measureBattery,w
  2417  02A6  00EE               	movwf	_adc_channel
  2418                           
  2419                           ;main.c: 214: break;
  2420  02A7  0008               	return
  2421  02A8                     l1858:	
  2422                           ;main.c: 216: case 6:
  2423                           
  2424                           
  2425                           ;main.c: 219: vbatt_hres=(float)adc_buffer*vscale;
  2426  02A8  0021               	movlb	1	; select bank1
  2427  02A9  082C               	movf	_vscale^(0+128),w
  2428  02AA  0020               	movlb	0	; select bank0
  2429  02AB  00BC               	movwf	?___ftmul
  2430  02AC  0021               	movlb	1	; select bank1
  2431  02AD  082D               	movf	(_vscale+1)^(0+128),w
  2432  02AE  0020               	movlb	0	; select bank0
  2433  02AF  00BD               	movwf	?___ftmul+1
  2434  02B0  0021               	movlb	1	; select bank1
  2435  02B1  082E               	movf	(_vscale+2)^(0+128),w
  2436  02B2  0020               	movlb	0	; select bank0
  2437  02B3  00BE               	movwf	?___ftmul+2
  2438  02B4  0021               	movlb	1	; select bank1
  2439  02B5  0830               	movf	(_adc_buffer+1)^(0+128),w
  2440  02B6  0020               	movlb	0	; select bank0
  2441  02B7  01A9               	clrf	?___lwtoft+1
  2442  02B8  07A9               	addwf	?___lwtoft+1,f
  2443  02B9  0021               	movlb	1	; select bank1
  2444  02BA  082F               	movf	_adc_buffer^(0+128),w
  2445  02BB  0020               	movlb	0	; select bank0
  2446  02BC  01A8               	clrf	?___lwtoft
  2447  02BD  07A8               	addwf	?___lwtoft,f
  2448  02BE  3187  2743  3182   	fcall	___lwtoft
  2449  02C1  0020               	movlb	0	; select bank0
  2450  02C2  0828               	movf	?___lwtoft,w
  2451  02C3  00BF               	movwf	?___ftmul+3
  2452  02C4  0829               	movf	?___lwtoft+1,w
  2453  02C5  00C0               	movwf	?___ftmul+4
  2454  02C6  082A               	movf	?___lwtoft+2,w
  2455  02C7  00C1               	movwf	?___ftmul+5
  2456  02C8  3183  2398  3182   	fcall	___ftmul
  2457  02CB  0020               	movlb	0	; select bank0
  2458  02CC  083C               	movf	?___ftmul,w
  2459  02CD  0021               	movlb	1	; select bank1
  2460  02CE  00A9               	movwf	_vbatt_hres^(0+128)
  2461  02CF  0020               	movlb	0	; select bank0
  2462  02D0  083D               	movf	?___ftmul+1,w
  2463  02D1  0021               	movlb	1	; select bank1
  2464  02D2  00AA               	movwf	(_vbatt_hres+1)^(0+128)
  2465  02D3  0020               	movlb	0	; select bank0
  2466  02D4  083E               	movf	?___ftmul+2,w
  2467  02D5  0021               	movlb	1	; select bank1
  2468  02D6  00AB               	movwf	(_vbatt_hres+2)^(0+128)
  2469                           
  2470                           ;main.c: 220: vbatt=(unsigned int)vbatt_hres;
  2471  02D7  0829               	movf	_vbatt_hres^(0+128),w
  2472  02D8  0020               	movlb	0	; select bank0
  2473  02D9  00CC               	movwf	?___fttol
  2474  02DA  0021               	movlb	1	; select bank1
  2475  02DB  082A               	movf	(_vbatt_hres+1)^(0+128),w
  2476  02DC  0020               	movlb	0	; select bank0
  2477  02DD  00CD               	movwf	?___fttol+1
  2478  02DE  0021               	movlb	1	; select bank1
  2479  02DF  082B               	movf	(_vbatt_hres+2)^(0+128),w
  2480  02E0  0020               	movlb	0	; select bank0
  2481  02E1  00CE               	movwf	?___fttol+2
  2482  02E2  3184  24F5  3182   	fcall	___fttol
  2483  02E5  0020               	movlb	0	; select bank0
  2484  02E6  084D               	movf	?___fttol+1,w
  2485  02E7  01EB               	clrf	_vbatt+1
  2486  02E8  07EB               	addwf	_vbatt+1,f
  2487  02E9  084C               	movf	?___fttol,w
  2488  02EA  01EA               	clrf	_vbatt
  2489  02EB  07EA               	addwf	_vbatt,f
  2490                           
  2491                           ;main.c: 221: I2C_Array[0]=(vbatt>>8) & 0xFF;
  2492  02EC  086B               	movf	_vbatt+1,w
  2493  02ED  00DA               	movwf	??_measureBattery
  2494  02EE  085A               	movf	??_measureBattery,w
  2495  02EF  0021               	movlb	1	; select bank1
  2496  02F0  00A0               	movwf	_I2C_Array^(0+128)	;volatile
  2497                           
  2498                           ;main.c: 222: I2C_Array[1]=vbatt & 0xFF;
  2499  02F1  0020               	movlb	0	; select bank0
  2500  02F2  086A               	movf	_vbatt,w
  2501  02F3  00DA               	movwf	??_measureBattery
  2502  02F4  085A               	movf	??_measureBattery,w
  2503  02F5  0021               	movlb	1	; select bank1
  2504  02F6  00A1               	movwf	(_I2C_Array^(0+128)+1)	;volatile
  2505                           
  2506                           ;main.c: 224: if(vbatt > VTH[5]) {charge=100;}
  2507  02F7  0020               	movlb	0	; select bank0
  2508  02F8  086B               	movf	_vbatt+1,w
  2509  02F9  0021               	movlb	1	; select bank1
  2510  02FA  0247               	subwf	((_VTH+1)^(0+128)+10),w
  2511  02FB  1D03               	skipz
  2512  02FC  2B01               	goto	u1275
  2513  02FD  0020               	movlb	0	; select bank0
  2514  02FE  086A               	movf	_vbatt,w
  2515  02FF  0021               	movlb	1	; select bank1
  2516  0300  0246               	subwf	(_VTH^(0+128)+10),w
  2517  0301                     u1275:	
  2518  0301  1803               	skipnc
  2519  0302  2B08               	goto	l1868
  2520  0303  3064               	movlw	100
  2521  0304  00B1               	movwf	_charge^(0+128)
  2522  0305  3000               	movlw	0
  2523  0306  00B2               	movwf	(_charge^(0+128)+1)
  2524  0307  2B78               	goto	l1874
  2525  0308                     l1868:	
  2526                           
  2527                           ;main.c: 225: else if(vbatt < VTH[0]) {charge=0;}
  2528  0308  083D               	movf	(_VTH+1)^(0+128),w
  2529  0309  0020               	movlb	0	; select bank0
  2530  030A  026B               	subwf	_vbatt+1,w
  2531  030B  1D03               	skipz
  2532  030C  2B11               	goto	u1285
  2533  030D  0021               	movlb	1	; select bank1
  2534  030E  083C               	movf	_VTH^(0+128),w
  2535  030F  0020               	movlb	0	; select bank0
  2536  0310  026A               	subwf	_vbatt,w
  2537  0311                     u1285:	
  2538  0311  1803               	skipnc
  2539  0312  2B17               	goto	l1872
  2540  0313  0021               	movlb	1	; select bank1
  2541  0314  01B1               	clrf	_charge^(0+128)
  2542  0315  01B2               	clrf	(_charge+1)^(0+128)
  2543  0316  2B78               	goto	l1874
  2544  0317                     l1872:	
  2545                           
  2546                           ;main.c: 226: else {charge=(unsigned int)(100*(float)((float)(vbatt-VTH[0])/(float)(VTH[
      +                          5]-VTH[0])));}
  2547  0317  0021               	movlb	1	; select bank1
  2548  0318  093C               	comf	_VTH^(0+128),w
  2549  0319  0020               	movlb	0	; select bank0
  2550  031A  00DA               	movwf	??_measureBattery
  2551  031B  0021               	movlb	1	; select bank1
  2552  031C  093D               	comf	(_VTH+1)^(0+128),w
  2553  031D  0020               	movlb	0	; select bank0
  2554  031E  00DB               	movwf	??_measureBattery+1
  2555  031F  0ADA               	incf	??_measureBattery,f
  2556  0320  1903               	skipnz
  2557  0321  0ADB               	incf	??_measureBattery+1,f
  2558  0322  086A               	movf	_vbatt,w
  2559  0323  075A               	addwf	??_measureBattery,w
  2560  0324  00A8               	movwf	?___lwtoft
  2561  0325  086B               	movf	_vbatt+1,w
  2562  0326  3D5B               	addwfc	??_measureBattery+1,w
  2563  0327  00A9               	movwf	?___lwtoft+1
  2564  0328  3187  2743  3182   	fcall	___lwtoft
  2565  032B  0020               	movlb	0	; select bank0
  2566  032C  0828               	movf	?___lwtoft,w
  2567  032D  00AF               	movwf	?___ftdiv+3
  2568  032E  0829               	movf	?___lwtoft+1,w
  2569  032F  00B0               	movwf	?___ftdiv+4
  2570  0330  082A               	movf	?___lwtoft+2,w
  2571  0331  00B1               	movwf	?___ftdiv+5
  2572  0332  300A               	movlw	10
  2573  0333  3EBC               	addlw	_VTH& (0+255)
  2574  0334  0086               	movwf	6
  2575  0335  0187               	clrf	7
  2576  0336  0021               	movlb	1	; select bank1
  2577  0337  093C               	comf	_VTH^(0+128),w
  2578  0338  0020               	movlb	0	; select bank0
  2579  0339  00DC               	movwf	??_measureBattery+2
  2580  033A  0021               	movlb	1	; select bank1
  2581  033B  093D               	comf	(_VTH+1)^(0+128),w
  2582  033C  0020               	movlb	0	; select bank0
  2583  033D  00DD               	movwf	??_measureBattery+3
  2584  033E  0ADC               	incf	??_measureBattery+2,f
  2585  033F  1903               	skipnz
  2586  0340  0ADD               	incf	??_measureBattery+3,f
  2587  0341  3F40               	moviw [0]fsr1
  2588  0342  075C               	addwf	??_measureBattery+2,w
  2589  0343  00A8               	movwf	?___lwtoft
  2590  0344  3F41               	moviw [1]fsr1
  2591  0345  3D5D               	addwfc	??_measureBattery+3,w
  2592  0346  00A9               	movwf	?___lwtoft+1
  2593  0347  3187  2743  3182   	fcall	___lwtoft
  2594  034A  0020               	movlb	0	; select bank0
  2595  034B  0828               	movf	?___lwtoft,w
  2596  034C  00AC               	movwf	?___ftdiv
  2597  034D  0829               	movf	?___lwtoft+1,w
  2598  034E  00AD               	movwf	?___ftdiv+1
  2599  034F  082A               	movf	?___lwtoft+2,w
  2600  0350  00AE               	movwf	?___ftdiv+2
  2601  0351  3184  244C  3182   	fcall	___ftdiv
  2602  0354  0020               	movlb	0	; select bank0
  2603  0355  082C               	movf	?___ftdiv,w
  2604  0356  00BF               	movwf	?___ftmul+3
  2605  0357  082D               	movf	?___ftdiv+1,w
  2606  0358  00C0               	movwf	?___ftmul+4
  2607  0359  082E               	movf	?___ftdiv+2,w
  2608  035A  00C1               	movwf	?___ftmul+5
  2609  035B  3000               	movlw	0
  2610  035C  00BC               	movwf	?___ftmul
  2611  035D  30C8               	movlw	200
  2612  035E  00BD               	movwf	?___ftmul+1
  2613  035F  3042               	movlw	66
  2614  0360  00BE               	movwf	?___ftmul+2
  2615  0361  3183  2398  3182   	fcall	___ftmul
  2616  0364  0020               	movlb	0	; select bank0
  2617  0365  083C               	movf	?___ftmul,w
  2618  0366  00CC               	movwf	?___fttol
  2619  0367  083D               	movf	?___ftmul+1,w
  2620  0368  00CD               	movwf	?___fttol+1
  2621  0369  083E               	movf	?___ftmul+2,w
  2622  036A  00CE               	movwf	?___fttol+2
  2623  036B  3184  24F5  3182   	fcall	___fttol
  2624  036E  0020               	movlb	0	; select bank0
  2625  036F  084D               	movf	?___fttol+1,w
  2626  0370  0021               	movlb	1	; select bank1
  2627  0371  01B2               	clrf	(_charge+1)^(0+128)
  2628  0372  07B2               	addwf	(_charge+1)^(0+128),f
  2629  0373  0020               	movlb	0	; select bank0
  2630  0374  084C               	movf	?___fttol,w
  2631  0375  0021               	movlb	1	; select bank1
  2632  0376  01B1               	clrf	_charge^(0+128)
  2633  0377  07B1               	addwf	_charge^(0+128),f
  2634  0378                     l1874:	
  2635                           
  2636                           ;main.c: 227: I2C_Array[4]=(charge>>8) & 0xFF;
  2637  0378  0832               	movf	(_charge+1)^(0+128),w
  2638  0379  0020               	movlb	0	; select bank0
  2639  037A  00DA               	movwf	??_measureBattery
  2640  037B  085A               	movf	??_measureBattery,w
  2641  037C  0021               	movlb	1	; select bank1
  2642  037D  00A4               	movwf	(_I2C_Array^(0+128)+4)	;volatile
  2643                           
  2644                           ;main.c: 228: I2C_Array[5]=charge & 0xFF;
  2645  037E  0831               	movf	_charge^(0+128),w
  2646  037F  0020               	movlb	0	; select bank0
  2647  0380  00DA               	movwf	??_measureBattery
  2648  0381  085A               	movf	??_measureBattery,w
  2649  0382  0021               	movlb	1	; select bank1
  2650  0383  00A5               	movwf	(_I2C_Array^(0+128)+5)	;volatile
  2651                           
  2652                           ;main.c: 231: read_adc(adc_channel);
  2653  0384  0020               	movlb	0	; select bank0
  2654  0385  086E               	movf	_adc_channel,w
  2655  0386  3187  272B         	fcall	_read_adc
  2656                           
  2657                           ;main.c: 232: adc_channel=7;
  2658  0388  3007               	movlw	7
  2659  0389  0020               	movlb	0	; select bank0
  2660  038A  00DA               	movwf	??_measureBattery
  2661  038B  085A               	movf	??_measureBattery,w
  2662  038C  00EE               	movwf	_adc_channel
  2663                           
  2664                           ;main.c: 234: }
  2665                           
  2666                           ;main.c: 233: break;
  2667  038D  0008               	return
  2668  038E                     l1884:	
  2669  038E  086E               	movf	_adc_channel,w
  2670                           
  2671                           ; Switch size 1, requested type "space"
  2672                           ; Number of cases is 2, Range of values is 6 to 7
  2673                           ; switch strategies available:
  2674                           ; Name         Instructions Cycles
  2675                           ; simple_byte            7     4 (average)
  2676                           ; direct_byte           13     9 (fixed)
  2677                           ; jumptable            263     9 (fixed)
  2678                           ;	Chosen strategy is simple_byte
  2679  038F  3A06               	xorlw	6	; case 6
  2680  0390  1903               	skipnz
  2681  0391  2AA8               	goto	l1858
  2682  0392  3A01               	xorlw	1	; case 7
  2683  0393  1903               	skipnz
  2684  0394  2A4B               	goto	l1848
  2685  0395  2B97               	goto	l188
  2686  0396  0008               	return
  2687  0397                     l188:	
  2688  0397  0008               	return
  2689  0398                     __end_of_measureBattery:	
  2690                           
  2691                           	psect	text5
  2692  0743                     __ptext5:	
  2693 ;; *************** function ___lwtoft *****************
  2694 ;; Defined at:
  2695 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lwtoft.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  c               2    8[BANK0 ] unsigned int 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  3    8[BANK0 ] float 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2709 ;;      Params:         0       3       0       0
  2710 ;;      Locals:         0       0       0       0
  2711 ;;      Temps:          0       1       0       0
  2712 ;;      Totals:         0       4       0       0
  2713 ;;Total ram usage:        4 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    2
  2716 ;; This function calls:
  2717 ;;		___ftpack
  2718 ;; This function is called by:
  2719 ;;		_measureBattery
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function ___lwtoft
  2725  0743                     ___lwtoft:	
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2729  0743  0020               	movlb	0	; select bank0
  2730  0744  0828               	movf	___lwtoft@c,w
  2731  0745  00A0               	movwf	?___ftpack
  2732  0746  0829               	movf	___lwtoft@c+1,w
  2733  0747  00A1               	movwf	?___ftpack+1
  2734  0748  01A2               	clrf	?___ftpack+2
  2735  0749  308E               	movlw	142
  2736  074A  00AB               	movwf	??___lwtoft
  2737  074B  082B               	movf	??___lwtoft,w
  2738  074C  00A3               	movwf	?___ftpack+3
  2739  074D  01A4               	clrf	?___ftpack+4
  2740  074E  3185  257C         	fcall	___ftpack
  2741  0750  0020               	movlb	0	; select bank0
  2742  0751  0820               	movf	?___ftpack,w
  2743  0752  00A8               	movwf	?___lwtoft
  2744  0753  0821               	movf	?___ftpack+1,w
  2745  0754  00A9               	movwf	?___lwtoft+1
  2746  0755  0822               	movf	?___ftpack+2,w
  2747  0756  00AA               	movwf	?___lwtoft+2
  2748  0757  0008               	return
  2749  0758                     __end_of___lwtoft:	
  2750                           
  2751                           	psect	text6
  2752  04F5                     __ptext6:	
  2753 ;; *************** function ___fttol *****************
  2754 ;; Defined at:
  2755 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\fttol.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  f1              3   44[BANK0 ] float 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  lval            4   53[BANK0 ] unsigned long 
  2760 ;;  exp1            1   57[BANK0 ] unsigned char 
  2761 ;;  sign1           1   52[BANK0 ] unsigned char 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  4   44[BANK0 ] long 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2771 ;;      Params:         0       4       0       0
  2772 ;;      Locals:         0       6       0       0
  2773 ;;      Temps:          0       4       0       0
  2774 ;;      Totals:         0      14       0       0
  2775 ;;Total ram usage:       14 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    1
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_measureBattery
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           
  2786                           ;psect for function ___fttol
  2787  04F5                     ___fttol:	
  2788                           
  2789                           ;incstack = 0
  2790                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2791  04F5  0020               	movlb	0	; select bank0
  2792  04F6  084C               	movf	___fttol@f1,w
  2793  04F7  00D0               	movwf	??___fttol
  2794  04F8  084D               	movf	___fttol@f1+1,w
  2795  04F9  00D1               	movwf	??___fttol+1
  2796  04FA  084E               	movf	___fttol@f1+2,w
  2797  04FB  00D2               	movwf	??___fttol+2
  2798  04FC  1003               	clrc
  2799  04FD  0D51               	rlf	??___fttol+1,w
  2800  04FE  0D52               	rlf	??___fttol+2,w
  2801  04FF  00D3               	movwf	??___fttol+3
  2802  0500  0853               	movf	??___fttol+3,w
  2803  0501  00D9               	movwf	___fttol@exp1
  2804  0502  08D9               	movf	___fttol@exp1,f
  2805  0503  1D03               	skipz
  2806  0504  2D0E               	goto	l2166
  2807  0505  3000               	movlw	0
  2808  0506  00CF               	movwf	?___fttol+3
  2809  0507  3000               	movlw	0
  2810  0508  00CE               	movwf	?___fttol+2
  2811  0509  3000               	movlw	0
  2812  050A  00CD               	movwf	?___fttol+1
  2813  050B  3000               	movlw	0
  2814  050C  00CC               	movwf	?___fttol
  2815  050D  0008               	return
  2816  050E                     l2166:	
  2817  050E  084C               	movf	___fttol@f1,w
  2818  050F  00D0               	movwf	??___fttol
  2819  0510  084D               	movf	___fttol@f1+1,w
  2820  0511  00D1               	movwf	??___fttol+1
  2821  0512  084E               	movf	___fttol@f1+2,w
  2822  0513  00D2               	movwf	??___fttol+2
  2823  0514  3017               	movlw	23
  2824  0515                     u1935:	
  2825  0515  36D2               	lsrf	??___fttol+2,f
  2826  0516  0CD1               	rrf	??___fttol+1,f
  2827  0517  0CD0               	rrf	??___fttol,f
  2828  0518  0B89               	decfsz	9,f
  2829  0519  2D15               	goto	u1935
  2830  051A  0850               	movf	??___fttol,w
  2831  051B  00D3               	movwf	??___fttol+3
  2832  051C  0853               	movf	??___fttol+3,w
  2833  051D  00D4               	movwf	___fttol@sign1
  2834  051E  17CD               	bsf	___fttol@f1+1,7
  2835  051F  30FF               	movlw	255
  2836  0520  05CC               	andwf	___fttol@f1,f
  2837  0521  30FF               	movlw	255
  2838  0522  05CD               	andwf	___fttol@f1+1,f
  2839  0523  3000               	movlw	0
  2840  0524  05CE               	andwf	___fttol@f1+2,f
  2841  0525  084C               	movf	___fttol@f1,w
  2842  0526  00D5               	movwf	___fttol@lval
  2843  0527  084D               	movf	___fttol@f1+1,w
  2844  0528  00D6               	movwf	___fttol@lval+1
  2845  0529  084E               	movf	___fttol@f1+2,w
  2846  052A  00D7               	movwf	___fttol@lval+2
  2847  052B  01D8               	clrf	___fttol@lval+3
  2848  052C  308E               	movlw	142
  2849  052D  02D9               	subwf	___fttol@exp1,f
  2850  052E  1FD9               	btfss	___fttol@exp1,7
  2851  052F  2D4C               	goto	l2186
  2852  0530  0859               	movf	___fttol@exp1,w
  2853  0531  3A80               	xorlw	128
  2854  0532  3E8F               	addlw	143
  2855  0533  1803               	skipnc
  2856  0534  2D3E               	goto	l2184
  2857  0535  3000               	movlw	0
  2858  0536  00CF               	movwf	?___fttol+3
  2859  0537  3000               	movlw	0
  2860  0538  00CE               	movwf	?___fttol+2
  2861  0539  3000               	movlw	0
  2862  053A  00CD               	movwf	?___fttol+1
  2863  053B  3000               	movlw	0
  2864  053C  00CC               	movwf	?___fttol
  2865  053D  0008               	return
  2866  053E                     l2184:	
  2867  053E  3001               	movlw	1
  2868  053F                     u1965:	
  2869  053F  36D8               	lsrf	___fttol@lval+3,f
  2870  0540  0CD7               	rrf	___fttol@lval+2,f
  2871  0541  0CD6               	rrf	___fttol@lval+1,f
  2872  0542  0CD5               	rrf	___fttol@lval,f
  2873  0543  0B89               	decfsz	9,f
  2874  0544  2D3F               	goto	u1965
  2875  0545  3001               	movlw	1
  2876  0546  00D0               	movwf	??___fttol
  2877  0547  0850               	movf	??___fttol,w
  2878  0548  07D9               	addwf	___fttol@exp1,f
  2879  0549  1903               	btfsc	3,2
  2880  054A  2D65               	goto	l2196
  2881  054B  2D3E               	goto	l2184
  2882  054C                     l2186:	
  2883  054C  3018               	movlw	24
  2884  054D  0259               	subwf	___fttol@exp1,w
  2885  054E  1C03               	skipc
  2886  054F  2D62               	goto	l2194
  2887  0550  3000               	movlw	0
  2888  0551  00CF               	movwf	?___fttol+3
  2889  0552  3000               	movlw	0
  2890  0553  00CE               	movwf	?___fttol+2
  2891  0554  3000               	movlw	0
  2892  0555  00CD               	movwf	?___fttol+1
  2893  0556  3000               	movlw	0
  2894  0557  00CC               	movwf	?___fttol
  2895  0558  0008               	return
  2896  0559                     l2192:	
  2897  0559  3001               	movlw	1
  2898  055A                     u1995:	
  2899  055A  35D5               	lslf	___fttol@lval,f
  2900  055B  0DD6               	rlf	___fttol@lval+1,f
  2901  055C  0DD7               	rlf	___fttol@lval+2,f
  2902  055D  0DD8               	rlf	___fttol@lval+3,f
  2903  055E  0B89               	decfsz	9,f
  2904  055F  2D5A               	goto	u1995
  2905  0560  3001               	movlw	1
  2906  0561  02D9               	subwf	___fttol@exp1,f
  2907  0562                     l2194:	
  2908  0562  08D9               	movf	___fttol@exp1,f
  2909  0563  1D03               	skipz
  2910  0564  2D59               	goto	l2192
  2911  0565                     l2196:	
  2912  0565  0854               	movf	___fttol@sign1,w
  2913  0566  1903               	btfsc	3,2
  2914  0567  2D73               	goto	l2200
  2915  0568  09D5               	comf	___fttol@lval,f
  2916  0569  09D6               	comf	___fttol@lval+1,f
  2917  056A  09D7               	comf	___fttol@lval+2,f
  2918  056B  09D8               	comf	___fttol@lval+3,f
  2919  056C  0AD5               	incf	___fttol@lval,f
  2920  056D  1903               	skipnz
  2921  056E  0AD6               	incf	___fttol@lval+1,f
  2922  056F  1903               	skipnz
  2923  0570  0AD7               	incf	___fttol@lval+2,f
  2924  0571  1903               	skipnz
  2925  0572  0AD8               	incf	___fttol@lval+3,f
  2926  0573                     l2200:	
  2927  0573  0858               	movf	___fttol@lval+3,w
  2928  0574  00CF               	movwf	?___fttol+3
  2929  0575  0857               	movf	___fttol@lval+2,w
  2930  0576  00CE               	movwf	?___fttol+2
  2931  0577  0856               	movf	___fttol@lval+1,w
  2932  0578  00CD               	movwf	?___fttol+1
  2933  0579  0855               	movf	___fttol@lval,w
  2934  057A  00CC               	movwf	?___fttol
  2935  057B  0008               	return
  2936  057C                     __end_of___fttol:	
  2937                           
  2938                           	psect	text7
  2939  0398                     __ptext7:	
  2940 ;; *************** function ___ftmul *****************
  2941 ;; Defined at:
  2942 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftmul.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  f1              3   28[BANK0 ] float 
  2945 ;;  f2              3   31[BANK0 ] float 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  2948 ;;  sign            1   43[BANK0 ] unsigned char 
  2949 ;;  cntr            1   42[BANK0 ] unsigned char 
  2950 ;;  exp             1   38[BANK0 ] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  3   28[BANK0 ] float 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, pclath, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2960 ;;      Params:         0       6       0       0
  2961 ;;      Locals:         0       6       0       0
  2962 ;;      Temps:          0       4       0       0
  2963 ;;      Totals:         0      16       0       0
  2964 ;;Total ram usage:       16 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    2
  2967 ;; This function calls:
  2968 ;;		___ftpack
  2969 ;; This function is called by:
  2970 ;;		_measureBattery
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function ___ftmul
  2976  0398                     ___ftmul:	
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2980  0398  0020               	movlb	0	; select bank0
  2981  0399  083C               	movf	___ftmul@f1,w
  2982  039A  00C2               	movwf	??___ftmul
  2983  039B  083D               	movf	___ftmul@f1+1,w
  2984  039C  00C3               	movwf	??___ftmul+1
  2985  039D  083E               	movf	___ftmul@f1+2,w
  2986  039E  00C4               	movwf	??___ftmul+2
  2987  039F  1003               	clrc
  2988  03A0  0D43               	rlf	??___ftmul+1,w
  2989  03A1  0D44               	rlf	??___ftmul+2,w
  2990  03A2  00C5               	movwf	??___ftmul+3
  2991  03A3  0845               	movf	??___ftmul+3,w
  2992  03A4  00C6               	movwf	___ftmul@exp
  2993  03A5  08C6               	movf	___ftmul@exp,f
  2994  03A6  1D03               	skipz
  2995  03A7  2BAF               	goto	l2116
  2996  03A8  3000               	movlw	0
  2997  03A9  00BC               	movwf	?___ftmul
  2998  03AA  3000               	movlw	0
  2999  03AB  00BD               	movwf	?___ftmul+1
  3000  03AC  3000               	movlw	0
  3001  03AD  00BE               	movwf	?___ftmul+2
  3002  03AE  0008               	return
  3003  03AF                     l2116:	
  3004  03AF  083F               	movf	___ftmul@f2,w
  3005  03B0  00C2               	movwf	??___ftmul
  3006  03B1  0840               	movf	___ftmul@f2+1,w
  3007  03B2  00C3               	movwf	??___ftmul+1
  3008  03B3  0841               	movf	___ftmul@f2+2,w
  3009  03B4  00C4               	movwf	??___ftmul+2
  3010  03B5  1003               	clrc
  3011  03B6  0D43               	rlf	??___ftmul+1,w
  3012  03B7  0D44               	rlf	??___ftmul+2,w
  3013  03B8  00C5               	movwf	??___ftmul+3
  3014  03B9  0845               	movf	??___ftmul+3,w
  3015  03BA  00CB               	movwf	___ftmul@sign
  3016  03BB  08CB               	movf	___ftmul@sign,f
  3017  03BC  1D03               	skipz
  3018  03BD  2BC5               	goto	l2122
  3019  03BE  3000               	movlw	0
  3020  03BF  00BC               	movwf	?___ftmul
  3021  03C0  3000               	movlw	0
  3022  03C1  00BD               	movwf	?___ftmul+1
  3023  03C2  3000               	movlw	0
  3024  03C3  00BE               	movwf	?___ftmul+2
  3025  03C4  0008               	return
  3026  03C5                     l2122:	
  3027  03C5  084B               	movf	___ftmul@sign,w
  3028  03C6  3E7B               	addlw	123
  3029  03C7  00C2               	movwf	??___ftmul
  3030  03C8  0842               	movf	??___ftmul,w
  3031  03C9  07C6               	addwf	___ftmul@exp,f
  3032  03CA  083C               	movf	___ftmul@f1,w
  3033  03CB  00C2               	movwf	??___ftmul
  3034  03CC  083D               	movf	___ftmul@f1+1,w
  3035  03CD  00C3               	movwf	??___ftmul+1
  3036  03CE  083E               	movf	___ftmul@f1+2,w
  3037  03CF  00C4               	movwf	??___ftmul+2
  3038  03D0  3010               	movlw	16
  3039  03D1                     u1825:	
  3040  03D1  36C4               	lsrf	??___ftmul+2,f
  3041  03D2  0CC3               	rrf	??___ftmul+1,f
  3042  03D3  0CC2               	rrf	??___ftmul,f
  3043  03D4  0B89               	decfsz	9,f
  3044  03D5  2BD1               	goto	u1825
  3045  03D6  0842               	movf	??___ftmul,w
  3046  03D7  00C5               	movwf	??___ftmul+3
  3047  03D8  0845               	movf	??___ftmul+3,w
  3048  03D9  00CB               	movwf	___ftmul@sign
  3049  03DA  083F               	movf	___ftmul@f2,w
  3050  03DB  00C2               	movwf	??___ftmul
  3051  03DC  0840               	movf	___ftmul@f2+1,w
  3052  03DD  00C3               	movwf	??___ftmul+1
  3053  03DE  0841               	movf	___ftmul@f2+2,w
  3054  03DF  00C4               	movwf	??___ftmul+2
  3055  03E0  3010               	movlw	16
  3056  03E1                     u1835:	
  3057  03E1  36C4               	lsrf	??___ftmul+2,f
  3058  03E2  0CC3               	rrf	??___ftmul+1,f
  3059  03E3  0CC2               	rrf	??___ftmul,f
  3060  03E4  0B89               	decfsz	9,f
  3061  03E5  2BE1               	goto	u1835
  3062  03E6  0842               	movf	??___ftmul,w
  3063  03E7  00C5               	movwf	??___ftmul+3
  3064  03E8  0845               	movf	??___ftmul+3,w
  3065  03E9  06CB               	xorwf	___ftmul@sign,f
  3066  03EA  3080               	movlw	128
  3067  03EB  00C2               	movwf	??___ftmul
  3068  03EC  0842               	movf	??___ftmul,w
  3069  03ED  05CB               	andwf	___ftmul@sign,f
  3070  03EE  17BD               	bsf	___ftmul@f1+1,7
  3071  03EF  17C0               	bsf	___ftmul@f2+1,7
  3072  03F0  30FF               	movlw	255
  3073  03F1  05BF               	andwf	___ftmul@f2,f
  3074  03F2  30FF               	movlw	255
  3075  03F3  05C0               	andwf	___ftmul@f2+1,f
  3076  03F4  3000               	movlw	0
  3077  03F5  05C1               	andwf	___ftmul@f2+2,f
  3078  03F6  3000               	movlw	0
  3079  03F7  00C7               	movwf	___ftmul@f3_as_product
  3080  03F8  3000               	movlw	0
  3081  03F9  00C8               	movwf	___ftmul@f3_as_product+1
  3082  03FA  3000               	movlw	0
  3083  03FB  00C9               	movwf	___ftmul@f3_as_product+2
  3084  03FC  3007               	movlw	7
  3085  03FD  00C2               	movwf	??___ftmul
  3086  03FE  0842               	movf	??___ftmul,w
  3087  03FF  00CA               	movwf	___ftmul@cntr
  3088  0400                     l2134:	
  3089  0400  1C3C               	btfss	___ftmul@f1,0
  3090  0401  2C08               	goto	l2138
  3091  0402  083F               	movf	___ftmul@f2,w
  3092  0403  07C7               	addwf	___ftmul@f3_as_product,f
  3093  0404  0840               	movf	___ftmul@f2+1,w
  3094  0405  3DC8               	addwfc	___ftmul@f3_as_product+1,f
  3095  0406  0841               	movf	___ftmul@f2+2,w
  3096  0407  3DC9               	addwfc	___ftmul@f3_as_product+2,f
  3097  0408                     l2138:	
  3098  0408  3001               	movlw	1
  3099  0409                     u1855:	
  3100  0409  36BE               	lsrf	___ftmul@f1+2,f
  3101  040A  0CBD               	rrf	___ftmul@f1+1,f
  3102  040B  0CBC               	rrf	___ftmul@f1,f
  3103  040C  0B89               	decfsz	9,f
  3104  040D  2C09               	goto	u1855
  3105  040E  3001               	movlw	1
  3106  040F                     u1865:	
  3107  040F  35BF               	lslf	___ftmul@f2,f
  3108  0410  0DC0               	rlf	___ftmul@f2+1,f
  3109  0411  0DC1               	rlf	___ftmul@f2+2,f
  3110  0412  0B89               	decfsz	9,f
  3111  0413  2C0F               	goto	u1865
  3112  0414  3001               	movlw	1
  3113  0415  02CA               	subwf	___ftmul@cntr,f
  3114  0416  1D03               	btfss	3,2
  3115  0417  2C00               	goto	l2134
  3116  0418  3009               	movlw	9
  3117  0419  00C2               	movwf	??___ftmul
  3118  041A  0842               	movf	??___ftmul,w
  3119  041B  00CA               	movwf	___ftmul@cntr
  3120  041C                     l2146:	
  3121  041C  1C3C               	btfss	___ftmul@f1,0
  3122  041D  2C24               	goto	l2150
  3123  041E  083F               	movf	___ftmul@f2,w
  3124  041F  07C7               	addwf	___ftmul@f3_as_product,f
  3125  0420  0840               	movf	___ftmul@f2+1,w
  3126  0421  3DC8               	addwfc	___ftmul@f3_as_product+1,f
  3127  0422  0841               	movf	___ftmul@f2+2,w
  3128  0423  3DC9               	addwfc	___ftmul@f3_as_product+2,f
  3129  0424                     l2150:	
  3130  0424  3001               	movlw	1
  3131  0425                     u1895:	
  3132  0425  36BE               	lsrf	___ftmul@f1+2,f
  3133  0426  0CBD               	rrf	___ftmul@f1+1,f
  3134  0427  0CBC               	rrf	___ftmul@f1,f
  3135  0428  0B89               	decfsz	9,f
  3136  0429  2C25               	goto	u1895
  3137  042A  3001               	movlw	1
  3138  042B                     u1905:	
  3139  042B  36C9               	lsrf	___ftmul@f3_as_product+2,f
  3140  042C  0CC8               	rrf	___ftmul@f3_as_product+1,f
  3141  042D  0CC7               	rrf	___ftmul@f3_as_product,f
  3142  042E  0B89               	decfsz	9,f
  3143  042F  2C2B               	goto	u1905
  3144  0430  3001               	movlw	1
  3145  0431  02CA               	subwf	___ftmul@cntr,f
  3146  0432  1D03               	btfss	3,2
  3147  0433  2C1C               	goto	l2146
  3148  0434  0847               	movf	___ftmul@f3_as_product,w
  3149  0435  00A0               	movwf	?___ftpack
  3150  0436  0848               	movf	___ftmul@f3_as_product+1,w
  3151  0437  00A1               	movwf	?___ftpack+1
  3152  0438  0849               	movf	___ftmul@f3_as_product+2,w
  3153  0439  00A2               	movwf	?___ftpack+2
  3154  043A  0846               	movf	___ftmul@exp,w
  3155  043B  00C2               	movwf	??___ftmul
  3156  043C  0842               	movf	??___ftmul,w
  3157  043D  00A3               	movwf	?___ftpack+3
  3158  043E  084B               	movf	___ftmul@sign,w
  3159  043F  00C3               	movwf	??___ftmul+1
  3160  0440  0843               	movf	??___ftmul+1,w
  3161  0441  00A4               	movwf	?___ftpack+4
  3162  0442  3185  257C         	fcall	___ftpack
  3163  0444  0020               	movlb	0	; select bank0
  3164  0445  0820               	movf	?___ftpack,w
  3165  0446  00BC               	movwf	?___ftmul
  3166  0447  0821               	movf	?___ftpack+1,w
  3167  0448  00BD               	movwf	?___ftmul+1
  3168  0449  0822               	movf	?___ftpack+2,w
  3169  044A  00BE               	movwf	?___ftmul+2
  3170  044B  0008               	return
  3171  044C                     __end_of___ftmul:	
  3172                           
  3173                           	psect	text8
  3174  044C                     __ptext8:	
  3175 ;; *************** function ___ftdiv *****************
  3176 ;; Defined at:
  3177 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftdiv.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  f2              3   12[BANK0 ] float 
  3180 ;;  f1              3   15[BANK0 ] float 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  f3              3   23[BANK0 ] float 
  3183 ;;  sign            1   27[BANK0 ] unsigned char 
  3184 ;;  exp             1   26[BANK0 ] unsigned char 
  3185 ;;  cntr            1   22[BANK0 ] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  3   12[BANK0 ] float 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, pclath, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3195 ;;      Params:         0       6       0       0
  3196 ;;      Locals:         0       6       0       0
  3197 ;;      Temps:          0       4       0       0
  3198 ;;      Totals:         0      16       0       0
  3199 ;;Total ram usage:       16 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    2
  3202 ;; This function calls:
  3203 ;;		___ftpack
  3204 ;; This function is called by:
  3205 ;;		_measureBattery
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           
  3210                           ;psect for function ___ftdiv
  3211  044C                     ___ftdiv:	
  3212                           
  3213                           ;incstack = 0
  3214                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3215  044C  0020               	movlb	0	; select bank0
  3216  044D  082F               	movf	___ftdiv@f1,w
  3217  044E  00B2               	movwf	??___ftdiv
  3218  044F  0830               	movf	___ftdiv@f1+1,w
  3219  0450  00B3               	movwf	??___ftdiv+1
  3220  0451  0831               	movf	___ftdiv@f1+2,w
  3221  0452  00B4               	movwf	??___ftdiv+2
  3222  0453  1003               	clrc
  3223  0454  0D33               	rlf	??___ftdiv+1,w
  3224  0455  0D34               	rlf	??___ftdiv+2,w
  3225  0456  00B5               	movwf	??___ftdiv+3
  3226  0457  0835               	movf	??___ftdiv+3,w
  3227  0458  00BA               	movwf	___ftdiv@exp
  3228  0459  08BA               	movf	___ftdiv@exp,f
  3229  045A  1D03               	skipz
  3230  045B  2C63               	goto	l2074
  3231  045C  3000               	movlw	0
  3232  045D  00AC               	movwf	?___ftdiv
  3233  045E  3000               	movlw	0
  3234  045F  00AD               	movwf	?___ftdiv+1
  3235  0460  3000               	movlw	0
  3236  0461  00AE               	movwf	?___ftdiv+2
  3237  0462  0008               	return
  3238  0463                     l2074:	
  3239  0463  082C               	movf	___ftdiv@f2,w
  3240  0464  00B2               	movwf	??___ftdiv
  3241  0465  082D               	movf	___ftdiv@f2+1,w
  3242  0466  00B3               	movwf	??___ftdiv+1
  3243  0467  082E               	movf	___ftdiv@f2+2,w
  3244  0468  00B4               	movwf	??___ftdiv+2
  3245  0469  1003               	clrc
  3246  046A  0D33               	rlf	??___ftdiv+1,w
  3247  046B  0D34               	rlf	??___ftdiv+2,w
  3248  046C  00B5               	movwf	??___ftdiv+3
  3249  046D  0835               	movf	??___ftdiv+3,w
  3250  046E  00BB               	movwf	___ftdiv@sign
  3251  046F  08BB               	movf	___ftdiv@sign,f
  3252  0470  1D03               	skipz
  3253  0471  2C79               	goto	l2080
  3254  0472  3000               	movlw	0
  3255  0473  00AC               	movwf	?___ftdiv
  3256  0474  3000               	movlw	0
  3257  0475  00AD               	movwf	?___ftdiv+1
  3258  0476  3000               	movlw	0
  3259  0477  00AE               	movwf	?___ftdiv+2
  3260  0478  0008               	return
  3261  0479                     l2080:	
  3262  0479  3000               	movlw	0
  3263  047A  00B7               	movwf	___ftdiv@f3
  3264  047B  3000               	movlw	0
  3265  047C  00B8               	movwf	___ftdiv@f3+1
  3266  047D  3000               	movlw	0
  3267  047E  00B9               	movwf	___ftdiv@f3+2
  3268  047F  3089               	movlw	137
  3269  0480  073B               	addwf	___ftdiv@sign,w
  3270  0481  00B2               	movwf	??___ftdiv
  3271  0482  0832               	movf	??___ftdiv,w
  3272  0483  02BA               	subwf	___ftdiv@exp,f
  3273  0484  082F               	movf	___ftdiv@f1,w
  3274  0485  00B2               	movwf	??___ftdiv
  3275  0486  0830               	movf	___ftdiv@f1+1,w
  3276  0487  00B3               	movwf	??___ftdiv+1
  3277  0488  0831               	movf	___ftdiv@f1+2,w
  3278  0489  00B4               	movwf	??___ftdiv+2
  3279  048A  3010               	movlw	16
  3280  048B                     u1745:	
  3281  048B  36B4               	lsrf	??___ftdiv+2,f
  3282  048C  0CB3               	rrf	??___ftdiv+1,f
  3283  048D  0CB2               	rrf	??___ftdiv,f
  3284  048E  0B89               	decfsz	9,f
  3285  048F  2C8B               	goto	u1745
  3286  0490  0832               	movf	??___ftdiv,w
  3287  0491  00B5               	movwf	??___ftdiv+3
  3288  0492  0835               	movf	??___ftdiv+3,w
  3289  0493  00BB               	movwf	___ftdiv@sign
  3290  0494  082C               	movf	___ftdiv@f2,w
  3291  0495  00B2               	movwf	??___ftdiv
  3292  0496  082D               	movf	___ftdiv@f2+1,w
  3293  0497  00B3               	movwf	??___ftdiv+1
  3294  0498  082E               	movf	___ftdiv@f2+2,w
  3295  0499  00B4               	movwf	??___ftdiv+2
  3296  049A  3010               	movlw	16
  3297  049B                     u1755:	
  3298  049B  36B4               	lsrf	??___ftdiv+2,f
  3299  049C  0CB3               	rrf	??___ftdiv+1,f
  3300  049D  0CB2               	rrf	??___ftdiv,f
  3301  049E  0B89               	decfsz	9,f
  3302  049F  2C9B               	goto	u1755
  3303  04A0  0832               	movf	??___ftdiv,w
  3304  04A1  00B5               	movwf	??___ftdiv+3
  3305  04A2  0835               	movf	??___ftdiv+3,w
  3306  04A3  06BB               	xorwf	___ftdiv@sign,f
  3307  04A4  3080               	movlw	128
  3308  04A5  00B2               	movwf	??___ftdiv
  3309  04A6  0832               	movf	??___ftdiv,w
  3310  04A7  05BB               	andwf	___ftdiv@sign,f
  3311  04A8  17B0               	bsf	___ftdiv@f1+1,7
  3312  04A9  30FF               	movlw	255
  3313  04AA  05AF               	andwf	___ftdiv@f1,f
  3314  04AB  30FF               	movlw	255
  3315  04AC  05B0               	andwf	___ftdiv@f1+1,f
  3316  04AD  3000               	movlw	0
  3317  04AE  05B1               	andwf	___ftdiv@f1+2,f
  3318  04AF  17AD               	bsf	___ftdiv@f2+1,7
  3319  04B0  30FF               	movlw	255
  3320  04B1  05AC               	andwf	___ftdiv@f2,f
  3321  04B2  30FF               	movlw	255
  3322  04B3  05AD               	andwf	___ftdiv@f2+1,f
  3323  04B4  3000               	movlw	0
  3324  04B5  05AE               	andwf	___ftdiv@f2+2,f
  3325  04B6  3018               	movlw	24
  3326  04B7  00B2               	movwf	??___ftdiv
  3327  04B8  0832               	movf	??___ftdiv,w
  3328  04B9  00B6               	movwf	___ftdiv@cntr
  3329  04BA                     l2094:	
  3330  04BA  3001               	movlw	1
  3331  04BB                     u1765:	
  3332  04BB  35B7               	lslf	___ftdiv@f3,f
  3333  04BC  0DB8               	rlf	___ftdiv@f3+1,f
  3334  04BD  0DB9               	rlf	___ftdiv@f3+2,f
  3335  04BE  0B89               	decfsz	9,f
  3336  04BF  2CBB               	goto	u1765
  3337  04C0  082E               	movf	___ftdiv@f2+2,w
  3338  04C1  0231               	subwf	___ftdiv@f1+2,w
  3339  04C2  1D03               	skipz
  3340  04C3  2CCA               	goto	u1775
  3341  04C4  082D               	movf	___ftdiv@f2+1,w
  3342  04C5  0230               	subwf	___ftdiv@f1+1,w
  3343  04C6  1D03               	skipz
  3344  04C7  2CCA               	goto	u1775
  3345  04C8  082C               	movf	___ftdiv@f2,w
  3346  04C9  022F               	subwf	___ftdiv@f1,w
  3347  04CA                     u1775:	
  3348  04CA  1C03               	skipc
  3349  04CB  2CD3               	goto	l2102
  3350  04CC  082C               	movf	___ftdiv@f2,w
  3351  04CD  02AF               	subwf	___ftdiv@f1,f
  3352  04CE  082D               	movf	___ftdiv@f2+1,w
  3353  04CF  3BB0               	subwfb	___ftdiv@f1+1,f
  3354  04D0  082E               	movf	___ftdiv@f2+2,w
  3355  04D1  3BB1               	subwfb	___ftdiv@f1+2,f
  3356  04D2  1437               	bsf	___ftdiv@f3,0
  3357  04D3                     l2102:	
  3358  04D3  3001               	movlw	1
  3359  04D4                     u1785:	
  3360  04D4  35AF               	lslf	___ftdiv@f1,f
  3361  04D5  0DB0               	rlf	___ftdiv@f1+1,f
  3362  04D6  0DB1               	rlf	___ftdiv@f1+2,f
  3363  04D7  0B89               	decfsz	9,f
  3364  04D8  2CD4               	goto	u1785
  3365  04D9  3001               	movlw	1
  3366  04DA  02B6               	subwf	___ftdiv@cntr,f
  3367  04DB  1D03               	btfss	3,2
  3368  04DC  2CBA               	goto	l2094
  3369  04DD  0837               	movf	___ftdiv@f3,w
  3370  04DE  00A0               	movwf	?___ftpack
  3371  04DF  0838               	movf	___ftdiv@f3+1,w
  3372  04E0  00A1               	movwf	?___ftpack+1
  3373  04E1  0839               	movf	___ftdiv@f3+2,w
  3374  04E2  00A2               	movwf	?___ftpack+2
  3375  04E3  083A               	movf	___ftdiv@exp,w
  3376  04E4  00B2               	movwf	??___ftdiv
  3377  04E5  0832               	movf	??___ftdiv,w
  3378  04E6  00A3               	movwf	?___ftpack+3
  3379  04E7  083B               	movf	___ftdiv@sign,w
  3380  04E8  00B3               	movwf	??___ftdiv+1
  3381  04E9  0833               	movf	??___ftdiv+1,w
  3382  04EA  00A4               	movwf	?___ftpack+4
  3383  04EB  3185  257C         	fcall	___ftpack
  3384  04ED  0020               	movlb	0	; select bank0
  3385  04EE  0820               	movf	?___ftpack,w
  3386  04EF  00AC               	movwf	?___ftdiv
  3387  04F0  0821               	movf	?___ftpack+1,w
  3388  04F1  00AD               	movwf	?___ftdiv+1
  3389  04F2  0822               	movf	?___ftpack+2,w
  3390  04F3  00AE               	movwf	?___ftdiv+2
  3391  04F4  0008               	return
  3392  04F5                     __end_of___ftdiv:	
  3393                           
  3394                           	psect	text9
  3395  057C                     __ptext9:	
  3396 ;; *************** function ___ftpack *****************
  3397 ;; Defined at:
  3398 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\float.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  arg             3    0[BANK0 ] unsigned um
  3401 ;;  exp             1    3[BANK0 ] unsigned char 
  3402 ;;  sign            1    4[BANK0 ] unsigned char 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  3    0[BANK0 ] float 
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3414 ;;      Params:         0       5       0       0
  3415 ;;      Locals:         0       0       0       0
  3416 ;;      Temps:          0       3       0       0
  3417 ;;      Totals:         0       8       0       0
  3418 ;;Total ram usage:        8 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:    1
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		___ftdiv
  3425 ;;		___ftmul
  3426 ;;		___lwtoft
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           
  3431                           ;psect for function ___ftpack
  3432  057C                     ___ftpack:	
  3433                           
  3434                           ;incstack = 0
  3435                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3436  057C  0020               	movlb	0	; select bank0
  3437  057D  0823               	movf	___ftpack@exp,w
  3438  057E  1903               	btfsc	3,2
  3439  057F  2D85               	goto	l2042
  3440  0580  0822               	movf	___ftpack@arg+2,w
  3441  0581  0421               	iorwf	___ftpack@arg+1,w
  3442  0582  0420               	iorwf	___ftpack@arg,w
  3443  0583  1D03               	skipz
  3444  0584  2D96               	goto	l2048
  3445  0585                     l2042:	
  3446  0585  3000               	movlw	0
  3447  0586  00A0               	movwf	?___ftpack
  3448  0587  3000               	movlw	0
  3449  0588  00A1               	movwf	?___ftpack+1
  3450  0589  3000               	movlw	0
  3451  058A  00A2               	movwf	?___ftpack+2
  3452  058B  0008               	return
  3453  058C                     l2046:	
  3454  058C  3001               	movlw	1
  3455  058D  00A5               	movwf	??___ftpack
  3456  058E  0825               	movf	??___ftpack,w
  3457  058F  07A3               	addwf	___ftpack@exp,f
  3458  0590  3001               	movlw	1
  3459  0591                     u1635:	
  3460  0591  36A2               	lsrf	___ftpack@arg+2,f
  3461  0592  0CA1               	rrf	___ftpack@arg+1,f
  3462  0593  0CA0               	rrf	___ftpack@arg,f
  3463  0594  0B89               	decfsz	9,f
  3464  0595  2D91               	goto	u1635
  3465  0596                     l2048:	
  3466  0596  30FE               	movlw	254
  3467  0597  0522               	andwf	___ftpack@arg+2,w
  3468  0598  1903               	btfsc	3,2
  3469  0599  2DAF               	goto	l570
  3470  059A  2D8C               	goto	l2046
  3471  059B                     l2050:	
  3472  059B  3001               	movlw	1
  3473  059C  00A5               	movwf	??___ftpack
  3474  059D  0825               	movf	??___ftpack,w
  3475  059E  07A3               	addwf	___ftpack@exp,f
  3476  059F  3001               	movlw	1
  3477  05A0  07A0               	addwf	___ftpack@arg,f
  3478  05A1  3000               	movlw	0
  3479  05A2  1803               	skipnc
  3480  05A3  3001               	movlw	1
  3481  05A4  07A1               	addwf	___ftpack@arg+1,f
  3482  05A5  3000               	movlw	0
  3483  05A6  1803               	skipnc
  3484  05A7  3001               	movlw	1
  3485  05A8  07A2               	addwf	___ftpack@arg+2,f
  3486  05A9  3001               	movlw	1
  3487  05AA                     u1655:	
  3488  05AA  36A2               	lsrf	___ftpack@arg+2,f
  3489  05AB  0CA1               	rrf	___ftpack@arg+1,f
  3490  05AC  0CA0               	rrf	___ftpack@arg,f
  3491  05AD  0B89               	decfsz	9,f
  3492  05AE  2DAA               	goto	u1655
  3493  05AF                     l570:	
  3494  05AF  30FF               	movlw	255
  3495  05B0  0522               	andwf	___ftpack@arg+2,w
  3496  05B1  1903               	btfsc	3,2
  3497  05B2  2DBC               	goto	l2058
  3498  05B3  2D9B               	goto	l2050
  3499  05B4                     l2056:	
  3500  05B4  3001               	movlw	1
  3501  05B5  02A3               	subwf	___ftpack@exp,f
  3502  05B6  3001               	movlw	1
  3503  05B7                     u1675:	
  3504  05B7  35A0               	lslf	___ftpack@arg,f
  3505  05B8  0DA1               	rlf	___ftpack@arg+1,f
  3506  05B9  0DA2               	rlf	___ftpack@arg+2,f
  3507  05BA  0B89               	decfsz	9,f
  3508  05BB  2DB7               	goto	u1675
  3509  05BC                     l2058:	
  3510  05BC  1FA1               	btfss	___ftpack@arg+1,7
  3511  05BD  2DB4               	goto	l2056
  3512  05BE  1823               	btfsc	___ftpack@exp,0
  3513  05BF  2DC6               	goto	l576
  3514  05C0  30FF               	movlw	255
  3515  05C1  05A0               	andwf	___ftpack@arg,f
  3516  05C2  307F               	movlw	127
  3517  05C3  05A1               	andwf	___ftpack@arg+1,f
  3518  05C4  30FF               	movlw	255
  3519  05C5  05A2               	andwf	___ftpack@arg+2,f
  3520  05C6                     l576:	
  3521  05C6  1003               	clrc
  3522  05C7  0CA3               	rrf	___ftpack@exp,f
  3523  05C8  0823               	movf	___ftpack@exp,w
  3524  05C9  00A5               	movwf	??___ftpack
  3525  05CA  01A6               	clrf	??___ftpack+1
  3526  05CB  01A7               	clrf	??___ftpack+2
  3527  05CC  3010               	movlw	16
  3528  05CD                     u1705:	
  3529  05CD  35A5               	lslf	??___ftpack,f
  3530  05CE  0DA6               	rlf	??___ftpack+1,f
  3531  05CF  0DA7               	rlf	??___ftpack+2,f
  3532  05D0  0B89               	decfsz	9,f
  3533  05D1  2DCD               	goto	u1705
  3534  05D2  0825               	movf	??___ftpack,w
  3535  05D3  04A0               	iorwf	___ftpack@arg,f
  3536  05D4  0826               	movf	??___ftpack+1,w
  3537  05D5  04A1               	iorwf	___ftpack@arg+1,f
  3538  05D6  0827               	movf	??___ftpack+2,w
  3539  05D7  04A2               	iorwf	___ftpack@arg+2,f
  3540  05D8  0824               	movf	___ftpack@sign,w
  3541  05D9  1903               	btfsc	3,2
  3542  05DA  0008               	return
  3543  05DB  17A2               	bsf	___ftpack@arg+2,7
  3544  05DC  0008               	return
  3545  05DD                     __end_of___ftpack:	
  3546                           
  3547                           	psect	text10
  3548  072B                     __ptext10:	
  3549 ;; *************** function _read_adc *****************
  3550 ;; Defined at:
  3551 ;;		line 169 in file "main.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  channel         1    wreg     unsigned char 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  channel         1    0[BANK0 ] unsigned char 
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  2  163[COMMON] int 
  3558 ;; Registers used:
  3559 ;;		wreg, status,2, status,0
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3565 ;;      Params:         0       0       0       0
  3566 ;;      Locals:         0       1       0       0
  3567 ;;      Temps:          0       0       0       0
  3568 ;;      Totals:         0       1       0       0
  3569 ;;Total ram usage:        1 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    1
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_measureBattery
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           
  3580                           ;psect for function _read_adc
  3581  072B                     _read_adc:	
  3582                           
  3583                           ;incstack = 0
  3584                           ; Regs used in _read_adc: [wreg+status,2+status,0]
  3585                           ;read_adc@channel stored from wreg
  3586  072B  0020               	movlb	0	; select bank0
  3587  072C  00A0               	movwf	read_adc@channel
  3588                           
  3589                           ;main.c: 170: if (channel==7) {ADCON0bits.CHS=0b00111;}
  3590  072D  0820               	movf	read_adc@channel,w
  3591  072E  3A07               	xorlw	7
  3592  072F  1D03               	skipz
  3593  0730  2F36               	goto	l1990
  3594  0731  0021               	movlb	1	; select bank1
  3595  0732  081D               	movf	29,w	;volatile
  3596  0733  3983               	andlw	-125
  3597  0734  381C               	iorlw	28
  3598  0735  2F3F               	goto	L1
  3599  0736                     l1990:	
  3600                           
  3601                           ;main.c: 171: else if (channel==6) {ADCON0bits.CHS=0b00110;}
  3602  0736  0020               	movlb	0	; select bank0
  3603  0737  0820               	movf	read_adc@channel,w
  3604  0738  3A06               	xorlw	6
  3605  0739  1D03               	skipz
  3606  073A  2F40               	goto	l1994
  3607  073B  0021               	movlb	1	; select bank1
  3608  073C  081D               	movf	29,w	;volatile
  3609  073D  3983               	andlw	-125
  3610  073E  3818               	iorlw	24
  3611  073F                     L1:	
  3612  073F  009D               	movwf	29	;volatile
  3613  0740                     l1994:	
  3614                           
  3615                           ;main.c: 172: ADCON0bits.GO_nDONE=1;
  3616  0740  0021               	movlb	1	; select bank1
  3617  0741  149D               	bsf	29,1	;volatile
  3618  0742  0008               	return
  3619  0743                     __end_of_read_adc:	
  3620                           
  3621                           	psect	text11
  3622  0768                     __ptext11:	
  3623 ;; *************** function _blink *****************
  3624 ;; Defined at:
  3625 ;;		line 309 in file "main.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;		None
  3630 ;; Return value:  Size  Location     Type
  3631 ;;		None               void
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3639 ;;      Params:         0       0       0       0
  3640 ;;      Locals:         0       0       0       0
  3641 ;;      Temps:          0       1       0       0
  3642 ;;      Totals:         0       1       0       0
  3643 ;;Total ram usage:        1 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; Hardware stack levels required when called:    1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_main
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           
  3654                           ;psect for function _blink
  3655  0768                     _blink:	
  3656                           
  3657                           ;main.c: 310: timer_blink++;
  3658                           
  3659                           ;incstack = 0
  3660                           ; Regs used in _blink: [wreg+status,2+status,0]
  3661  0768  3001               	movlw	1
  3662  0769  0020               	movlb	0	; select bank0
  3663  076A  00A0               	movwf	??_blink
  3664  076B  0820               	movf	??_blink,w
  3665  076C  07E8               	addwf	_timer_blink,f
  3666                           
  3667                           ;main.c: 311: if(timer_blink >= blink_ds){
  3668  076D  086F               	movf	_blink_ds,w
  3669  076E  0268               	subwf	_timer_blink,w
  3670  076F  1C03               	skipc
  3671  0770  0008               	return
  3672                           
  3673                           ;main.c: 312: toggle = toggle^1;
  3674  0771  0869               	movf	_toggle,w
  3675  0772  3A01               	xorlw	1
  3676  0773  00A0               	movwf	??_blink
  3677  0774  0820               	movf	??_blink,w
  3678  0775  00E9               	movwf	_toggle
  3679                           
  3680                           ;main.c: 313: timer_blink=0;
  3681  0776  01E8               	clrf	_timer_blink
  3682  0777  0008               	return
  3683  0778                     __end_of_blink:	
  3684                           
  3685                           	psect	text12
  3686  0710                     __ptext12:	
  3687 ;; *************** function _I2cInitSlave *****************
  3688 ;; Defined at:
  3689 ;;		line 25 in file "i2c.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  address         1    wreg     const unsigned char 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  address         1    0[BANK0 ] const unsigned char 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;		None               void
  3696 ;; Registers used:
  3697 ;;		wreg, status,2
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3703 ;;      Params:         0       0       0       0
  3704 ;;      Locals:         0       1       0       0
  3705 ;;      Temps:          0       0       0       0
  3706 ;;      Totals:         0       1       0       0
  3707 ;;Total ram usage:        1 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    1
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_main
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           
  3718                           ;psect for function _I2cInitSlave
  3719  0710                     _I2cInitSlave:	
  3720                           
  3721                           ;incstack = 0
  3722                           ; Regs used in _I2cInitSlave: [wreg+status,2]
  3723                           ;I2cInitSlave@address stored from wreg
  3724  0710  0020               	movlb	0	; select bank0
  3725  0711  00A0               	movwf	I2cInitSlave@address
  3726                           
  3727                           ;i2c.c: 26: RC0 = 1;
  3728  0712  140E               	bsf	14,0	;volatile
  3729                           
  3730                           ;i2c.c: 27: RC1 = 1;
  3731  0713  148E               	bsf	14,1	;volatile
  3732                           
  3733                           ;i2c.c: 28: SSP1CON1 = 0b00110110;
  3734  0714  3036               	movlw	54
  3735  0715  0024               	movlb	4	; select bank4
  3736  0716  0095               	movwf	21	;volatile
  3737                           
  3738                           ;i2c.c: 29: SSP1CON2 = 0;
  3739  0717  0196               	clrf	22	;volatile
  3740                           
  3741                           ;i2c.c: 30: SSP1CON2bits.SEN = 1;
  3742  0718  1416               	bsf	22,0	;volatile
  3743                           
  3744                           ;i2c.c: 31: SSP1CON3bits.BOEN = 1;
  3745  0719  1617               	bsf	23,4	;volatile
  3746                           
  3747                           ;i2c.c: 35: SSP1CON3bits.SDAHT = 1;
  3748  071A  1597               	bsf	23,3	;volatile
  3749                           
  3750                           ;i2c.c: 37: SSP1CON3bits.SBCDE = 1;
  3751  071B  1517               	bsf	23,2	;volatile
  3752                           
  3753                           ;i2c.c: 39: SSP1ADD = address;
  3754  071C  0020               	movlb	0	; select bank0
  3755  071D  0820               	movf	I2cInitSlave@address,w
  3756  071E  0024               	movlb	4	; select bank4
  3757  071F  0092               	movwf	18	;volatile
  3758                           
  3759                           ;i2c.c: 40: SSP1STATbits.CKE = 0;
  3760  0720  1314               	bcf	20,6	;volatile
  3761                           
  3762                           ;i2c.c: 41: SSP1STATbits.SMP =0;
  3763  0721  1394               	bcf	20,7	;volatile
  3764                           
  3765                           ;i2c.c: 42: PIR1bits.SSP1IF = 0;
  3766  0722  0020               	movlb	0	; select bank0
  3767  0723  1191               	bcf	17,3	;volatile
  3768                           
  3769                           ;i2c.c: 43: PIR2bits.BCL1IF = 0;
  3770  0724  1192               	bcf	18,3	;volatile
  3771                           
  3772                           ;i2c.c: 45: PIE2bits.BCL1IE = 1;
  3773  0725  0021               	movlb	1	; select bank1
  3774  0726  1592               	bsf	18,3	;volatile
  3775                           
  3776                           ;i2c.c: 46: PIE1bits.SSP1IE = 1;
  3777  0727  1591               	bsf	17,3	;volatile
  3778                           
  3779                           ;i2c.c: 47: INTCONbits.PEIE = 1;
  3780  0728  170B               	bsf	11,6	;volatile
  3781                           
  3782                           ;i2c.c: 48: INTCONbits.GIE = 1;
  3783  0729  178B               	bsf	11,7	;volatile
  3784  072A  0008               	return
  3785  072B                     __end_of_I2cInitSlave:	
  3786                           
  3787                           	psect	text13
  3788  06ED                     __ptext13:	
  3789 ;; *************** function _InitApp *****************
  3790 ;; Defined at:
  3791 ;;		line 12 in file "user.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;		None               void
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3805 ;;      Params:         0       0       0       0
  3806 ;;      Locals:         0       0       0       0
  3807 ;;      Temps:          0       0       0       0
  3808 ;;      Totals:         0       0       0       0
  3809 ;;Total ram usage:        0 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    1
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_main
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           
  3820                           ;psect for function _InitApp
  3821  06ED                     _InitApp:	
  3822                           
  3823                           ;user.c: 24: TRISA = 0b00000001;
  3824                           
  3825                           ;incstack = 0
  3826                           ; Regs used in _InitApp: [wreg+status,2+status,0]
  3827  06ED  3001               	movlw	1
  3828  06EE  0021               	movlb	1	; select bank1
  3829  06EF  008C               	movwf	12	;volatile
  3830                           
  3831                           ;user.c: 25: TRISC = 0b00001111;
  3832  06F0  300F               	movlw	15
  3833  06F1  008E               	movwf	14	;volatile
  3834                           
  3835                           ;user.c: 27: ANSELA = 0b00000000;
  3836  06F2  0023               	movlb	3	; select bank3
  3837  06F3  018C               	clrf	12	;volatile
  3838                           
  3839                           ;user.c: 28: ANSELC = 0b00001100;
  3840  06F4  300C               	movlw	12
  3841  06F5  008E               	movwf	14	;volatile
  3842                           
  3843                           ;user.c: 31: PORTA = 0b00010100;
  3844  06F6  3014               	movlw	20
  3845  06F7  0020               	movlb	0	; select bank0
  3846  06F8  008C               	movwf	12	;volatile
  3847                           
  3848                           ;user.c: 32: PORTC = 0b00110000;
  3849  06F9  3030               	movlw	48
  3850  06FA  008E               	movwf	14	;volatile
  3851                           
  3852                           ;user.c: 33: LATA = 0b00010100;
  3853  06FB  3014               	movlw	20
  3854  06FC  0022               	movlb	2	; select bank2
  3855  06FD  008C               	movwf	12	;volatile
  3856                           
  3857                           ;user.c: 34: LATC = 0b00110000;
  3858  06FE  3030               	movlw	48
  3859  06FF  008E               	movwf	14	;volatile
  3860                           
  3861                           ;user.c: 39: T1CON=0b01000001;
  3862  0700  3041               	movlw	65
  3863  0701  0020               	movlb	0	; select bank0
  3864  0702  0098               	movwf	24	;volatile
  3865                           
  3866                           ;user.c: 46: PIE1bits.TMR1IE = 1;
  3867  0703  0021               	movlb	1	; select bank1
  3868  0704  1411               	bsf	17,0	;volatile
  3869                           
  3870                           ;user.c: 48: ADCON0=0x00;
  3871  0705  019D               	clrf	29	;volatile
  3872                           
  3873                           ;user.c: 53: ADCON0bits.ADON = 1;
  3874  0706  141D               	bsf	29,0	;volatile
  3875                           
  3876                           ;user.c: 56: ADCON1=0x00;
  3877  0707  019E               	clrf	30	;volatile
  3878                           
  3879                           ;user.c: 62: ADCON1bits.ADCS=0b110;
  3880  0708  081E               	movf	30,w	;volatile
  3881  0709  398F               	andlw	-113
  3882  070A  3860               	iorlw	96
  3883  070B  009E               	movwf	30	;volatile
  3884                           
  3885                           ;user.c: 69: INTCONbits.GIE = 1;
  3886  070C  178B               	bsf	11,7	;volatile
  3887                           
  3888                           ;user.c: 70: INTCONbits.PEIE = 1;
  3889  070D  170B               	bsf	11,6	;volatile
  3890                           
  3891                           ;user.c: 71: PIE1bits.ADIE = 1;
  3892  070E  1711               	bsf	17,6	;volatile
  3893  070F  0008               	return
  3894  0710                     __end_of_InitApp:	
  3895                           
  3896                           	psect	text14
  3897  0788                     __ptext14:	
  3898 ;; *************** function _ConfigureOscillator *****************
  3899 ;; Defined at:
  3900 ;;		line 8 in file "system.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;		None               void
  3907 ;; Registers used:
  3908 ;;		status,2
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3914 ;;      Params:         0       0       0       0
  3915 ;;      Locals:         0       0       0       0
  3916 ;;      Temps:          0       0       0       0
  3917 ;;      Totals:         0       0       0       0
  3918 ;;Total ram usage:        0 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    1
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_main
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           
  3929                           ;psect for function _ConfigureOscillator
  3930  0788                     _ConfigureOscillator:	
  3931                           
  3932                           ;system.c: 11: OSCCON=0b00000000;
  3933                           
  3934                           ;incstack = 0
  3935                           ; Regs used in _ConfigureOscillator: [status,2]
  3936  0788  0021               	movlb	1	; select bank1
  3937  0789  0199               	clrf	25	;volatile
  3938  078A  0008               	return
  3939  078B                     __end_of_ConfigureOscillator:	
  3940                           
  3941                           	psect	intentry
  3942  0004                     __pintentry:	
  3943 ;; *************** function _isr *****************
  3944 ;; Defined at:
  3945 ;;		line 33 in file "interrupts.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;		None               void
  3952 ;; Registers used:
  3953 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3959 ;;      Params:         0       0       0       0
  3960 ;;      Locals:         0       0       0       0
  3961 ;;      Temps:          8       0       0       0
  3962 ;;      Totals:         8       0       0       0
  3963 ;;Total ram usage:        8 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		Interrupt level 1
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972  0004                     _isr:	
  3973                           
  3974                           ;incstack = 0
  3975                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  3976  0004  3180               	pagesel	$
  3977  0005  0020               	movlb	0	; select bank0
  3978  0006  087F               	movf	127,w
  3979  0007  00F7               	movwf	??_isr+7
  3980                           
  3981                           ;interrupts.c: 34: if(PIR1bits.TMR1IF){
  3982  0008  1C11               	btfss	17,0	;volatile
  3983  0009  2811               	goto	i1l1652
  3984                           
  3985                           ;interrupts.c: 35: timer_100us=1;
  3986  000A  01E4               	clrf	_timer_100us
  3987  000B  0AE4               	incf	_timer_100us,f
  3988                           
  3989                           ;interrupts.c: 38: TMR1H=0xF0;
  3990  000C  30F0               	movlw	240
  3991  000D  0097               	movwf	23	;volatile
  3992                           
  3993                           ;interrupts.c: 39: TMR1L=0xA2;
  3994  000E  30A2               	movlw	162
  3995  000F  0096               	movwf	22	;volatile
  3996                           
  3997                           ;interrupts.c: 40: PIR1bits.TMR1IF = 0;
  3998  0010  1011               	bcf	17,0	;volatile
  3999  0011                     i1l1652:	
  4000                           
  4001                           ;interrupts.c: 42: }
  4002                           ;interrupts.c: 44: if(PIR1bits.ADIF){
  4003  0011  1F11               	btfss	17,6	;volatile
  4004  0012  2830               	goto	i1l1658
  4005                           
  4006                           ;interrupts.c: 45: adc_buffer = (ADRESH<<2) + (ADRESL>>6);
  4007  0013  0021               	movlb	1	; select bank1
  4008  0014  081B               	movf	27,w	;volatile
  4009  0015  00F0               	movwf	??_isr
  4010  0016  3006               	movlw	6
  4011  0017                     u105_25:	
  4012  0017  36F0               	lsrf	??_isr,f
  4013  0018  0B89               	decfsz	9,f
  4014  0019  2817               	goto	u105_25
  4015  001A  0870               	movf	??_isr,w
  4016  001B  00F1               	movwf	??_isr+1
  4017  001C  01F2               	clrf	??_isr+2
  4018  001D  081C               	movf	28,w	;volatile
  4019  001E  00F3               	movwf	??_isr+3
  4020  001F  01F4               	clrf	??_isr+4
  4021  0020  35F3               	lslf	??_isr+3,f
  4022  0021  0DF4               	rlf	??_isr+4,f
  4023  0022  35F3               	lslf	??_isr+3,f
  4024  0023  0DF4               	rlf	??_isr+4,f
  4025  0024  0871               	movf	??_isr+1,w
  4026  0025  0773               	addwf	??_isr+3,w
  4027  0026  00F5               	movwf	??_isr+5
  4028  0027  0872               	movf	??_isr+2,w
  4029  0028  3D74               	addwfc	??_isr+4,w
  4030  0029  00F6               	movwf	??_isr+6
  4031  002A  0875               	movf	??_isr+5,w
  4032  002B  00AF               	movwf	_adc_buffer^(0+128)
  4033  002C  0876               	movf	??_isr+6,w
  4034  002D  00B0               	movwf	(_adc_buffer+1)^(0+128)
  4035                           
  4036                           ;interrupts.c: 46: PIR1bits.ADIF = 0;
  4037  002E  0020               	movlb	0	; select bank0
  4038  002F  1311               	bcf	17,6	;volatile
  4039  0030                     i1l1658:	
  4040                           
  4041                           ;interrupts.c: 48: }
  4042                           ;interrupts.c: 51: if (PIR2bits.BCL1IF == 1){
  4043  0030  1992               	btfsc	18,3	;volatile
  4044                           
  4045                           ;interrupts.c: 52: PIR2bits.BCL1IF = 0;
  4046  0031  1192               	bcf	18,3	;volatile
  4047                           
  4048                           ;interrupts.c: 55: }
  4049                           ;interrupts.c: 57: if (PIR1bits.SSP1IF == 1){
  4050  0032  1D91               	btfss	17,3	;volatile
  4051  0033  2892               	goto	i1l52
  4052                           
  4053                           ;interrupts.c: 59: PIR1bits.SSP1IF = 0;
  4054  0034  1191               	bcf	17,3	;volatile
  4055                           
  4056                           ;interrupts.c: 61: timeout = 0;
  4057  0035  01E2               	clrf	_timeout
  4058                           
  4059                           ;interrupts.c: 63: if (SSP1STATbits.R_nW){
  4060  0036  0024               	movlb	4	; select bank4
  4061  0037  1D14               	btfss	20,2	;volatile
  4062  0038  2853               	goto	i1l1684
  4063                           
  4064                           ;interrupts.c: 64: if (!SSP1STATbits.D_nA){
  4065  0039  1A94               	btfsc	20,5	;volatile
  4066  003A  2846               	goto	i1l1676
  4067                           
  4068                           ;interrupts.c: 65: SSP1BUF = I2C_Array[index_i2c++];
  4069  003B  0878               	movf	_index_i2c,w
  4070  003C  3EA0               	addlw	_I2C_Array& (0+255)
  4071  003D  0086               	movwf	6
  4072  003E  0187               	clrf	7
  4073  003F  0801               	movf	1,w
  4074  0040  0091               	movwf	17	;volatile
  4075  0041  3001               	movlw	1
  4076  0042  07F8               	addwf	_index_i2c,f
  4077  0043  3000               	movlw	0
  4078  0044  3DF9               	addwfc	_index_i2c+1,f
  4079                           
  4080                           ;interrupts.c: 66: SSP1CON1bits.CKP = 1;
  4081  0045  1615               	bsf	21,4	;volatile
  4082  0046                     i1l1676:	
  4083                           
  4084                           ;interrupts.c: 67: }
  4085                           ;interrupts.c: 68: if (SSP1STATbits.D_nA){
  4086  0046  1E94               	btfss	20,5	;volatile
  4087  0047  2853               	goto	i1l1684
  4088                           
  4089                           ;interrupts.c: 69: SSP1BUF = I2C_Array[index_i2c++];
  4090  0048  0878               	movf	_index_i2c,w
  4091  0049  3EA0               	addlw	_I2C_Array& (0+255)
  4092  004A  0086               	movwf	6
  4093  004B  0187               	clrf	7
  4094  004C  0801               	movf	1,w
  4095  004D  0091               	movwf	17	;volatile
  4096  004E  3001               	movlw	1
  4097  004F  07F8               	addwf	_index_i2c,f
  4098  0050  3000               	movlw	0
  4099  0051  3DF9               	addwfc	_index_i2c+1,f
  4100                           
  4101                           ;interrupts.c: 70: SSP1CON1bits.CKP = 1;
  4102  0052  1615               	bsf	21,4	;volatile
  4103  0053                     i1l1684:	
  4104                           
  4105                           ;interrupts.c: 71: }
  4106                           ;interrupts.c: 72: }
  4107                           ;interrupts.c: 73: if (!SSP1STATbits.R_nW){
  4108  0053  1914               	btfsc	20,2	;volatile
  4109  0054  2892               	goto	i1l52
  4110                           
  4111                           ;interrupts.c: 74: if (!SSP1STATbits.D_nA){
  4112  0055  1A94               	btfsc	20,5	;volatile
  4113  0056  2860               	goto	i1l1694
  4114                           
  4115                           ;interrupts.c: 75: first = 1;
  4116  0057  01FB               	clrf	_first
  4117  0058  0AFB               	incf	_first,f
  4118                           
  4119                           ;interrupts.c: 76: junk = SSPBUF;
  4120  0059  0811               	movf	17,w	;volatile
  4121  005A  00F0               	movwf	??_isr
  4122  005B  0870               	movf	??_isr,w
  4123  005C  0020               	movlb	0	; select bank0
  4124  005D  00E1               	movwf	_junk
  4125                           
  4126                           ;interrupts.c: 77: SSP1CON1bits.CKP = 1;
  4127  005E  0024               	movlb	4	; select bank4
  4128  005F  1615               	bsf	21,4	;volatile
  4129  0060                     i1l1694:	
  4130                           
  4131                           ;interrupts.c: 78: }
  4132                           ;interrupts.c: 79: if (SSP1STATbits.D_nA){
  4133  0060  1E94               	btfss	20,5	;volatile
  4134  0061  2892               	goto	i1l52
  4135                           
  4136                           ;interrupts.c: 80: if (first){
  4137  0062  087B               	movf	_first,w
  4138  0063  1903               	btfsc	3,2
  4139  0064  286E               	goto	i1l1702
  4140                           
  4141                           ;interrupts.c: 81: index_i2c = SSP1BUF;
  4142  0065  0811               	movf	17,w	;volatile
  4143  0066  00F0               	movwf	??_isr
  4144  0067  01F1               	clrf	??_isr+1
  4145  0068  0870               	movf	??_isr,w
  4146  0069  00F8               	movwf	_index_i2c
  4147  006A  0871               	movf	??_isr+1,w
  4148  006B  00F9               	movwf	_index_i2c+1
  4149                           
  4150                           ;interrupts.c: 82: first = 0;
  4151  006C  01FB               	clrf	_first
  4152                           
  4153                           ;interrupts.c: 83: }
  4154  006D  2887               	goto	i1l1710
  4155  006E                     i1l1702:	
  4156                           
  4157                           ;interrupts.c: 84: else{
  4158                           ;interrupts.c: 85: if (index_i2c < 4){
  4159  006E  3000               	movlw	0
  4160  006F  0279               	subwf	_index_i2c+1,w
  4161  0070  3004               	movlw	4
  4162  0071  1903               	skipnz
  4163  0072  0278               	subwf	_index_i2c,w
  4164  0073  1803               	skipnc
  4165  0074  2882               	goto	i1l1708
  4166                           
  4167                           ;interrupts.c: 86: I2C_Array[index_i2c++] = SSPBUF;
  4168  0075  0811               	movf	17,w	;volatile
  4169  0076  00F0               	movwf	??_isr
  4170  0077  0878               	movf	_index_i2c,w
  4171  0078  3EA0               	addlw	_I2C_Array& (0+255)
  4172  0079  0086               	movwf	6
  4173  007A  0187               	clrf	7
  4174  007B  0870               	movf	??_isr,w
  4175  007C  0081               	movwf	1
  4176  007D  3001               	movlw	1
  4177  007E  07F8               	addwf	_index_i2c,f
  4178  007F  3000               	movlw	0
  4179  0080  3DF9               	addwfc	_index_i2c+1,f
  4180                           
  4181                           ;interrupts.c: 87: }
  4182  0081  2887               	goto	i1l1710
  4183  0082                     i1l1708:	
  4184                           
  4185                           ;interrupts.c: 88: else{
  4186                           ;interrupts.c: 89: junk = SSP1BUF;
  4187  0082  0811               	movf	17,w	;volatile
  4188  0083  00F0               	movwf	??_isr
  4189  0084  0870               	movf	??_isr,w
  4190  0085  0020               	movlb	0	; select bank0
  4191  0086  00E1               	movwf	_junk
  4192  0087                     i1l1710:	
  4193                           
  4194                           ;interrupts.c: 90: }
  4195                           ;interrupts.c: 91: }
  4196                           ;interrupts.c: 92: if (SSP1CON1bits.WCOL){
  4197  0087  0024               	movlb	4	; select bank4
  4198  0088  1F95               	btfss	21,7	;volatile
  4199  0089  2890               	goto	i1l1716
  4200                           
  4201                           ;interrupts.c: 93: SSP1CON1bits.WCOL = 0;
  4202  008A  1395               	bcf	21,7	;volatile
  4203                           
  4204                           ;interrupts.c: 94: junk = SSPBUF;
  4205  008B  0811               	movf	17,w	;volatile
  4206  008C  00F0               	movwf	??_isr
  4207  008D  0870               	movf	??_isr,w
  4208  008E  0020               	movlb	0	; select bank0
  4209  008F  00E1               	movwf	_junk
  4210  0090                     i1l1716:	
  4211                           
  4212                           ;interrupts.c: 95: }
  4213                           ;interrupts.c: 96: SSP1CON1bits.CKP = 1;
  4214  0090  0024               	movlb	4	; select bank4
  4215  0091  1615               	bsf	21,4	;volatile
  4216  0092                     i1l52:	
  4217  0092  0877               	movf	??_isr+7,w
  4218  0093  0020               	movlb	0	; select bank0
  4219  0094  00FF               	movwf	127
  4220  0095  0009               	retfie
  4221  0096                     __end_of_isr:	
  4222  007E                     btemp	set	126	;btemp
  4223  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     63      80
    BANK1            80      0      44
    BANK2            80      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    ?___ftdiv	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 3
		 -> iscale(BANK1[3]), 

    ?___ftmul	float  size(1) Largest target is 0

    ?___lwtoft	float  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_measureBattery
    _displayCharge->_lightupLed
    _measureBattery->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1869
                                             62 BANK0      1     1      0
                _ConfigureOscillator
                            _InitApp
                       _I2cInitSlave
                              _blink
                     _measureBattery
                      _displayCharge
                         _readButton
 ---------------------------------------------------------------------------------
 (1) _readButton                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _displayCharge                                        6     6      0     296
                                              8 BANK0      6     6      0
                         _lightupLed
 ---------------------------------------------------------------------------------
 (2) _lightupLed                                           8     8      0     295
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _measureBattery                                       4     4      0    1551
                                             58 BANK0      4     4      0
                           _read_adc
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3     231
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     252
                                             44 BANK0     14    10      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6     535
                                             28 BANK0     16    10      6
                           ___ftpack
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6     489
                                             12 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5     209
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _blink                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2cInitSlave                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _I2cInitSlave
   _blink
   _measureBattery
     _read_adc
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _displayCharge
     _lightupLed
   _readButton

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       3       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2C       8       55.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      8D      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Dec 12 16:31:59 2014

                           _j 00B7                   __CFG_CP$OFF 0000                           l174 06DE  
                         l188 0397                           l570 05AF                           l576 05C6  
                         _RA0 0060                           _RA2 0062                           _RC0 0070  
                         _RA4 0064                           _RC1 0071                           _RC4 0074  
                         _RC5 0075                  __CFG_CPD$OFF 0000                           _VTH 00BC  
                         _isr 0004                ?_displayCharge 0070                  __CFG_BORV$LO 0000  
                         wreg 0009                  __CFG_LVP$OFF 0000                  ___ftdiv@cntr 0036  
                ___ftdiv@sign 003B                          l2102 04D3                          l2006 05F3  
                        l2200 0573                          l2016 0606                          l2050 059B  
                        l2042 0585                          l2122 03C5                          l2026 0619  
                        l2116 03AF                          l2036 062C                          l2046 058C  
                        l2150 0424                          l2134 0400                          l2056 05B4  
                        l2048 0596                          l2080 0479                          l2058 05BC  
                        l2074 0463                          l2146 041C                          l2138 0408  
                        l2094 04BA                          l2166 050E                          l2192 0559  
                        l2184 053E                          l2194 0562                          l2186 054C  
                        l1730 0645                          l2196 0565                          l1724 063C  
                        l1910 011B                          l1920 0154                          l1904 010D  
                        l1736 064E                          l1930 018D                          l1906 0113  
                        l1940 01C6                          l1916 014A                          l1764 0679  
                        l1748 0660                          l1950 01FF                          l1926 0183  
                        l1918 0150                          l1872 0317                          l1848 024B  
                        l1936 01BC                          l1928 0189                          l1874 0378  
                        l1858 02A8                          l1962 023C                          l1946 01F5  
                        l1938 01C2                          l1868 0308                          l1884 038E  
                        l1956 022E                          l1948 01FB                          l1892 00D0  
                        l1990 0736                          l1958 0234                          l1894 00D6  
                        l1974 06C7                          l1994 0740                          l1898 00DE  
                        l1978 06CB                          ?_isr 0070                          u1305 00CB  
                        u1315 00EF                          u1405 01F0                          u1325 0108  
                        _LATA 010C                          u1415 0210                          u1335 012C  
                        _LATC 010E                          u1425 0229                          u1345 0145  
                        u1275 0301                          u1355 0165                          u1285 0311  
                        u1525 05FD                          u1365 017E                          u1375 019E  
                        u1295 00B2                          u1705 05CD                          u1385 01B7  
                        u1635 0591                          u1555 0610                          u1395 01D7  
                        u1655 05AA                          u1495 05E2                          u1745 048B  
                        u1905 042B                          u1825 03D1                          u1585 0623  
                        u1675 05B7                          u1755 049B                          u1835 03E1  
                        u1765 04BB                          u1775 04CA                          u1855 0409  
                        u1935 0515                          u1785 04D4                          u1865 040F  
                        u1965 053F                          u1895 0425                          u1995 055A  
                        i1l52 0092                  __CFG_WRT$OFF 0000                          _cont 00B6  
                        _main 0632                  ___ftpack@arg 0020                  ___ftpack@exp 0023  
                        _junk 0061                          fsr0h 0005                          fsr1h 0007  
                        fsr0l 0004                          indf0 0000                          indf1 0001  
                        fsr1l 0006                          btemp 007E                          _vtol 006C  
                        start 0096                 __CFG_IESO$OFF 0000                 __CFG_FOSC$ECH 0000  
               __CFG_MCLRE$ON 0000                  ___ftmul@cntr 004A                  ___ftmul@sign 004B  
           lightupLed@lightup 0027               __end_of_InitApp 0710                  ___fttol@exp1 0059  
                ___fttol@lval 0055                         ??_isr 0070                 __CFG_PLLEN$ON 0000  
                       ?_main 0070                 __CFG_WDTE$OFF 0000               __end_of___ftdiv 04F5  
             __end_of___ftmul 044C                         _T1CON 0018               __end_of___fttol 057C  
                       _TMR1H 0017                         _TMR1L 0016                         _PORTA 000C  
                       _PORTC 000E                         _TRISA 008C                         _TRISC 008E  
         _ConfigureOscillator 0788                __CFG_FCMEN$OFF 0000                         _blink 0768  
                       _ibatt 00B3                         _first 007B                         _vbatt 006A  
               ___ftpack@sign 0024                         _prova 00B8                         _vhyst 005F  
              __pbitbssCOMMON 03E8                __CFG_BOREN$OFF 0000          __end_of_I2cInitSlave 072B  
                       status 0003                         wtemp0 007E          ?_ConfigureOscillator 0070  
             __initialization 0685                  __end_of_main 0685                        ??_main 005E  
               ___fttol@sign1 0054               ??_displayCharge 0028                        ?_blink 0070  
                      _ADCON0 009D                        _ADCON1 009E                        _ADRESH 009C  
                      _ADRESL 009B                        _ANSELA 018C                        _ANSELC 018E  
            __end_of___ftpack 05DD                        i1l1710 0087                        i1l1702 006E  
                      i1l1716 0090                        i1l1708 0082                        i1l1652 0011  
                      u105_25 0017                        i1l1658 0030                        i1l1676 0046  
                      i1l1684 0053                        i1l1694 0060              __end_of___lwtoft 0758  
                      _OSCCON 0099                        _SSPBUF 0211                     ??_InitApp 0020  
       ??_ConfigureOscillator 0020                __CFG_PWRTE$OFF 0000                        _charge 00B1  
                   ??___ftdiv 0032                     ??___ftmul 0042                     ??___fttol 0050  
                      _iscale 00B9              __end_of_read_adc 0743                        _toggle 0069  
                      _vscale 00AC         ___ftmul@f3_as_product 0047                  __pdataCOMMON 007B  
     __size_of_measureBattery 0151       __end_of__initialization 06B8                    ___ftdiv@f1 002F  
                  ___ftdiv@f2 002C                    ___ftdiv@f3 0037                    ___ftmul@f1 003C  
                  ___ftmul@f2 003F                    ___fttol@f1 004C                __pcstackCOMMON 0070  
                __pidataBANK0 0784                  __pidataBANK1 0758                    _adc_buffer 00AF  
               __end_of_blink 0778                    ___lwtoft@c 0028         __size_of_I2cInitSlave 001B  
                     ??_blink 0020                    __pbssBANK0 005F                    __pbssBANK1 00A0  
                  __pmaintext 0632                    __pintentry 0004                     ?___ftpack 0020  
                _I2cInitSlave 0710                    _ibatt_hres 00A6                     ?___lwtoft 0028  
                     _SSP1ADD 0212                       _SSP1BUF 0211           I2cInitSlave@address 0020  
                   _I2C_Array 00A0                     ?_read_adc 0070                       _InitApp 06ED  
                  _readButton 06BB                       ___ftdiv 044C                       ___ftmul 0398  
                     ___fttol 04F5                    _lightupLed 05DD               __CFG_STVREN$OFF 0000  
                  ??___ftpack 0025                       __ptext1 06BB                       __ptext2 0098  
                     __ptext3 05DD                       __ptext4 0247                       __ptext5 0743  
                     __ptext6 04F5                       __ptext7 0398                       __ptext8 044C  
                     __ptext9 057C                    ??___lwtoft 002B                  _Build_number 00B5  
                __size_of_isr 0092                _measureBattery 0247                       _timeout 0062  
                     clrloop0 0779          end_of_initialization 06B8                       init_ram 077E  
                  ??_read_adc 0020                       initloop 077F                    _vbatt_hres 00A9  
                  _timer_10ms 0065                    _timer_fail 007A        __end_of_measureBattery 0398  
             read_adc@channel 0020         __end_of_displayCharge 0247   __end_of_ConfigureOscillator 078B  
             lightupLed@blink 0026                   ___ftdiv@exp 003A  displayCharge@adc_buffer_last 002C  
                 ___ftmul@exp 0046                   _adc_channel 006E                   ?_readButton 0070  
                 ?_lightupLed 0070                 __pidataCOMMON 078B               ?_measureBattery 0070  
         start_initialization 0685                   __end_of_isr 0096                _lightupLed$291 0022  
              _lightupLed$292 0023                _lightupLed$293 0024                _lightupLed$294 0025  
                 __pdataBANK0 006C                   __pdataBANK1 00BC             __size_of___ftpack 0061  
                 __pbssCOMMON 0078             __size_of___lwtoft 0015                 __pcstackBANK0 0020  
         __size_of_readButton 0032           __size_of_lightupLed 0055                      ?_InitApp 0070  
               _Revision_vers 00CB             __size_of_read_adc 0018                      ?___ftdiv 002C  
                    ?___ftmul 003C                      ?___fttol 004C                     _index_i2c 0078  
              __size_of_blink 0010                     _button_ok 03E8                     clear_ram0 0778  
                    _PIE1bits 0091                      _PIE2bits 0092                      _PIR1bits 0011  
                    _PIR2bits 0012                     _timer_1ms 0066                      _SSP1CON1 0215  
                    _SSP1CON2 0216                _timer_debounce 007C                    _ADCON0bits 009D  
                  _ADCON1bits 009E              __size_of_InitApp 0023              ??_measureBattery 005A  
                ??_readButton 0020                  ??_lightupLed 0020              __size_of___ftdiv 00A9  
            __size_of___ftmul 00B4              __size_of___fttol 0087                      ___ftpack 057C  
                    ___lwtoft 0743                      _blink_ds 006F                      __ptext10 072B  
                    __ptext11 0768                      __ptext12 0710                      __ptext13 06ED  
                    __ptext14 0788                  _SSP1CON1bits 0215                  _SSP1CON2bits 0216  
                _SSP1CON3bits 0217            __end_of_readButton 06ED                      _read_adc 072B  
               __size_of_main 0053            __end_of_lightupLed 0632  __size_of_ConfigureOscillator 0003  
      __size_of_displayCharge 01AF                      _timer_1s 0067                  _SSP1STATbits 0214  
               ?_I2cInitSlave 0070                    _INTCONbits 000B                      intlevel1 0000  
           __CFG_CLKOUTEN$OFF 0000                   _timer_100ms 0063                   _timer_100us 0064  
              ??_I2cInitSlave 0020                 _Firmware_vers 00CA                 _displayCharge 0098  
                 _timer_blink 0068  
